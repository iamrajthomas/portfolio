{"version":3,"sources":["app/components/MatxLayout/Layout1/Layout1Topbar.jsx","app/components/Sidenav/Sidenav.jsx","app/components/Brand/Brand.jsx","app/components/MatxLayout/Layout1/Layout1Sidenav.jsx","app/components/Footer/Footer.jsx","app/components/SecondarySidebar/SecondarySidebarToggle.jsx","app/components/MatxCustomizer/BadgeSelected.jsx","app/components/MatxCustomizer/MatxCustomizer.jsx","app/components/ShoppingCart/ShoppingCart.jsx","app/components/SecondarySidebar/SecondarySidebarContent.jsx","app/components/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx","app/components/SecondarySidebar/SecondarySidebar.jsx","app/components/MatxTheme/SidenavTheme/SidenavTheme.jsx","app/components/MatxLayout/Layout1/Layout1.jsx"],"names":["useStyles","makeStyles","palette","theme","topbar","top","zIndex","transition","background","backgroundColor","primary","main","height","paddingLeft","paddingRight","breakpoints","down","boxShadow","shadows","userMenu","display","alignItems","cursor","borderRadius","padding","margin","menuItem","minWidth","React","memo","useTheme","classes","useSettings","settings","updateSettings","useAuth","logout","user","isMdScreen","useMediaQuery","fixed","layout1Settings","className","clsx","IconButton","onClick","mode","sidebarSettings","leftSidebar","Icon","menuButton","Hidden","xsDown","Avatar","src","process","avatar","MenuItem","to","scrollable","sidenavMobileOverlay","position","left","bottom","right","width","up","Sidenav","children","options","suppressScrollX","items","navigations","activeLayoutSettingsName","activeLayout","activeLayoutSettings","updateSidebarMode","brand","hideOnCompact","Brand","portfolio","configuration","logo","href","title","alt","sidenavHoverShow","sidenav","primaryRGB","bgImgURL","backgroundRepeat","backgroundPosition","backgroundSize","overflow","color","text","backgroundImage","maxWidth","userInfo","convertHexToRGB","getSidenavWidth","smDown","Switch","onChange","checked","size","footer","minHeight","flexDirection","appbar","Footer","footerTheme","themes","github","ThemeProvider","AppBar","Toolbar","Card","authorUrl","tabIndex","target","rel","name","tagline","username","toggle","SecondarySidebarToggle","secondarySidebar","open","BadgeSelected","withStyles","badge","Badge","label","secondary","dark","fontWeight","transform","marginBottom","letterSpacing","fontSize","contrastText","helpText","maxCustomizer","customizerCloseButton","layoutBox","justifyContent","demoLayouts","thumbnail","isPro","activeTheme","bgOpacity","layout2Settings","MatxCustomizer","props","useState","setOpen","setTabIndex","tooglePanel","handleTabChange","index","Tooltip","placement","Drawer","anchor","variant","onClose","ModalProps","keepMounted","Button","map","layout","badgeContent","invisible","key","elevation","Link","miniCart","cartListLoaded","ShoppingCart","container","totalCost","setTotalCost","panelOpen","setPanelOpen","dispatch","useDispatch","history","useHistory","cartList","useSelector","state","ecommerce","getCartList","id","handleDrawerToggle","useEffect","total","forEach","product","price","amount","length","updateCartAmount","disabled","imgUrl","deleteProductFromCart","userId","push","toFixed","root","marginRight","SecondarySidebarContent","icon","SecondarySidenavTheme","SecondarySidebar","secondarySidebarTheme","SidenavTheme","sidenavTheme","contentWrap","verticalAlign","marginLeft","sidenavMode","showSidenav","show","routes","useContext","AppContext","sidenavWidth","ref","useRef","topbarTheme","layoutClasses","type","current","sidebarMode","perfectScrollbar","renderRoutes"],"mappings":"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","file":"static/js/36.2fc7fca4.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n    Icon,\r\n    IconButton,\r\n    MenuItem,\r\n    Avatar,\r\n    useMediaQuery,\r\n    Hidden,\r\n} from '@material-ui/core'\r\nimport { MatxMenu, MatxSearchBox } from 'app/components'\r\n// import NotificationBar from '../../NotificationBar/NotificationBar'\r\n// import NotificationBar2 from '../../NotificationBar2/NotificationBar2'\r\nimport { Link } from 'react-router-dom'\r\n// import ShoppingCart from '../../ShoppingCart/ShoppingCart'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport useAuth from 'app/hooks/useAuth'\r\nimport useSettings from 'app/hooks/useSettings'\r\n// import { NotificationProvider } from 'app/contexts/NotificationContext'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    topbar: {\r\n        top: 0,\r\n        zIndex: 96,\r\n        transition: 'all 0.3s ease',\r\n        background:\r\n            'linear-gradient(180deg, rgba(255, 255, 255, 0.95) 44%, rgba(247, 247, 247, 0.4) 50%, rgba(255, 255, 255, 0))',\r\n\r\n        '& .topbar-hold': {\r\n            backgroundColor: palette.primary.main,\r\n            height: 80,\r\n            paddingLeft: 18,\r\n            paddingRight: 20,\r\n            [theme.breakpoints.down('sm')]: {\r\n                paddingLeft: 16,\r\n                paddingRight: 16,\r\n            },\r\n            [theme.breakpoints.down('xs')]: {\r\n                paddingLeft: 14,\r\n                paddingRight: 16,\r\n            },\r\n        },\r\n        '& .fixed': {\r\n            boxShadow: theme.shadows[8],\r\n            height: 64,\r\n        },\r\n    },\r\n    userMenu: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        cursor: 'pointer',\r\n        borderRadius: 24,\r\n        padding: 4,\r\n        '& span': {\r\n            margin: '0 8px',\r\n            // color: palette.text.secondary\r\n        },\r\n    },\r\n    menuItem: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        minWidth: 185,\r\n    },\r\n}))\r\n\r\nconst Layout1Topbar = () => {\r\n    const theme = useTheme()\r\n    const classes = useStyles()\r\n    const { settings, updateSettings } = useSettings()\r\n    const { logout, user } = useAuth()\r\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\r\n    const fixed = settings?.layout1Settings?.topbar?.fixed\r\n\r\n    const updateSidebarMode = (sidebarSettings) => {\r\n        updateSettings({\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    ...sidebarSettings,\r\n                },\r\n            },\r\n        })\r\n    }\r\n\r\n    const handleSidebarToggle = () => {\r\n        let { layout1Settings } = settings\r\n        let mode\r\n\r\n        if (isMdScreen) {\r\n            mode =\r\n                layout1Settings.leftSidebar.mode === 'close'\r\n                    ? 'mobile'\r\n                    : 'close'\r\n        } else {\r\n            mode =\r\n                layout1Settings.leftSidebar.mode === 'full' ? 'close' : 'full'\r\n        }\r\n\r\n        updateSidebarMode({ mode })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.topbar}>\r\n            <div className={clsx({ 'topbar-hold': true, fixed: fixed })}>\r\n                <div className=\"flex justify-between items-center h-full\">\r\n                    <div className=\"flex\">\r\n                        <IconButton\r\n                            onClick={handleSidebarToggle}\r\n                        >\r\n                            <Icon>menu</Icon>\r\n                        </IconButton>\r\n\r\n                        {/* <div className=\"hide-on-mobile\">\r\n                            <IconButton>\r\n                                <Icon>mail_outline</Icon>\r\n                            </IconButton>\r\n\r\n                            <IconButton>\r\n                                <Icon>web_asset</Icon>\r\n                            </IconButton>\r\n\r\n                            <IconButton>\r\n                                <Icon>star_outline</Icon>\r\n                            </IconButton>\r\n                        </div> */}\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                        <MatxSearchBox />\r\n                        {/* <NotificationProvider>\r\n                            <NotificationBar />\r\n                        </NotificationProvider> */}\r\n\r\n                        {/* <NotificationBar2 /> */}\r\n\r\n                        {/* <ShoppingCart /> */}\r\n\r\n                        <MatxMenu\r\n                            menuButton={\r\n                                <div className={classes.userMenu}>\r\n                                    <Hidden xsDown>\r\n                                        <span>\r\n                                            {/* <strong>{user.name}</strong> */}\r\n                                            <strong>RT</strong> \r\n                                        </span>\r\n                                    </Hidden>\r\n                                    <Avatar\r\n                                        className=\"cursor-pointer\"\r\n                                        src={`${process.env.PUBLIC_URL}${user.avatar}`}\r\n                                        // src={user.avatar}\r\n                                        // src={`${process.env.PUBLIC_URL}/assets/images/rt/rt-face.jpg`}\r\n                                    />\r\n                                </div>\r\n                            }\r\n                        >\r\n                            <MenuItem>\r\n                                <Link className={classes.menuItem} to=\"/\">\r\n                                    <Icon> home </Icon>\r\n                                    <span className=\"pl-4\"> Home </span>\r\n                                </Link>\r\n                            </MenuItem>\r\n                            {/* <MenuItem>\r\n                                <Link\r\n                                    className={classes.menuItem}\r\n                                    to=\"/page-layouts/user-profile\"\r\n                                >\r\n                                    <Icon> person </Icon>\r\n                                    <span className=\"pl-4\"> Profile </span>\r\n                                </Link>\r\n                            </MenuItem>\r\n                            <MenuItem className={classes.menuItem}>\r\n                                <Icon> settings </Icon>\r\n                                <span className=\"pl-4\"> Settings </span>\r\n                            </MenuItem> */}\r\n                            <MenuItem\r\n                                onClick={logout}\r\n                                className={classes.menuItem}\r\n                            >\r\n                                <Icon> power_settings_new </Icon>\r\n                                <span className=\"pl-4\"> Logout </span>\r\n                            </MenuItem>\r\n                        </MatxMenu>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Layout1Topbar)\r\n","import React, { Fragment } from 'react'\r\nimport Scrollbar from 'react-perfect-scrollbar'\r\nimport { navigations } from 'app/navigations'\r\nimport { MatxVerticalNav } from 'app/components'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    scrollable: {\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n    },\r\n    sidenavMobileOverlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        width: '100vw',\r\n        background: 'rgba(0, 0, 0, 0.54)',\r\n        zIndex: -1,\r\n        [theme.breakpoints.up('lg')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n}))\r\n\r\nconst Sidenav = ({ children }) => {\r\n    const classes = useStyles()\r\n    const { settings, updateSettings } = useSettings()\r\n\r\n    const updateSidebarMode = (sidebarSettings) => {\r\n        let activeLayoutSettingsName = settings.activeLayout + 'Settings'\r\n        let activeLayoutSettings = settings[activeLayoutSettingsName]\r\n\r\n        updateSettings({\r\n            ...settings,\r\n            [activeLayoutSettingsName]: {\r\n                ...activeLayoutSettings,\r\n                leftSidebar: {\r\n                    ...activeLayoutSettings.leftSidebar,\r\n                    ...sidebarSettings,\r\n                },\r\n            },\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Scrollbar\r\n                options={{ suppressScrollX: true }}\r\n                className={clsx('relative px-4', classes.scrollable)}\r\n            >\r\n                {children}\r\n                <MatxVerticalNav items={navigations} />\r\n            </Scrollbar>\r\n\r\n            <div\r\n                onClick={() => updateSidebarMode({ mode: 'close' })}\r\n                className={classes.sidenavMobileOverlay}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Sidenav\r\n","import React from 'react'\r\n// import { MatxLogo } from 'app/components'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport configuration from \"../../config/configuration\";\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    brand: {\r\n        padding: '20px 18px 20px 29px',\r\n    },\r\n    hideOnCompact: {\r\n        display: 'none',\r\n    },\r\n}))\r\n\r\nconst Brand = ({ children }) => {\r\n    const classes = useStyles()\r\n    const { settings } = useSettings()\r\n    const leftSidebar = settings.layout1Settings.leftSidebar\r\n    const { mode } = leftSidebar\r\n\r\n    const portfolio = configuration.portfolio;\r\n\r\n    return (\r\n        <div\r\n            className={clsx('flex items-center justify-between', classes.brand)}\r\n        >\r\n            <div className=\"flex items-center\">\r\n                {/* <MatxLogo /> */}\r\n                {\r\n                    portfolio?.logo &&\r\n                    <a href=\"#\" title=\"profile logo\">\r\n                        <img \r\n                        src={`${process.env.PUBLIC_URL}${portfolio.logo}`}\r\n                        // src={portfolio.logo}\r\n                        //src={`${process.env.PUBLIC_URL}/assets/images/products/project-img/codelogo.jpg`}\r\n                        alt=\"\" height='25px' width='25px'></img>\r\n                    </a>\r\n                }\r\n                <span\r\n                    className={clsx({\r\n                        'text-18 ml-2 font-medium sidenavHoverShow': true,\r\n                        [classes.hideOnCompact]: mode === 'compact',\r\n                    })}\r\n                >\r\n                    [RT]\r\n                    {/* Matx */}\r\n                </span>\r\n            </div>\r\n            <div\r\n                className={clsx({\r\n                    sidenavHoverShow: true,\r\n                    [classes.hideOnCompact]: mode === 'compact',\r\n                })}\r\n            >\r\n                {children || null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Brand\r\n","import React from 'react'\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles'\r\n\r\nimport Sidenav from '../../Sidenav/Sidenav'\r\nimport Brand from '../../Brand/Brand'\r\nimport { Switch, Hidden } from '@material-ui/core'\r\nimport { convertHexToRGB } from 'utils'\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    sidenav: ({ width, primaryRGB, bgImgURL }) => ({\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        height: '100vh',\r\n        width: width,\r\n        boxShadow: theme.shadows[8],\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'top',\r\n        backgroundSize: 'cover',\r\n        zIndex: 111,\r\n        overflow: 'hidden',\r\n        color: palette.text.primary,\r\n        transition: 'all 250ms ease-in-out',\r\n        backgroundImage: `linear-gradient(to bottom, rgba(${primaryRGB}, 0.96), rgba(${primaryRGB}, 0.96)), url(${bgImgURL})`,\r\n        '&:hover': {\r\n            width: 'var(--sidenav-width)',\r\n            '& .sidenavHoverShow': {\r\n                display: 'block',\r\n            },\r\n            '& .compactNavItem': {\r\n                width: '100%',\r\n                maxWidth: '100%',\r\n                '& .nav-bullet': {\r\n                    display: 'block',\r\n                },\r\n                '& .nav-bullet-text': {\r\n                    display: 'none',\r\n                },\r\n            },\r\n        },\r\n    }),\r\n    hideOnCompact: {\r\n        display: 'none',\r\n    },\r\n    userInfo: {},\r\n}))\r\n\r\nconst Layout1Sidenav = () => {\r\n    const theme = useTheme()\r\n\r\n    const { settings, updateSettings } = useSettings()\r\n\r\n    const leftSidebar = settings.layout1Settings.leftSidebar\r\n    const { mode } = leftSidebar\r\n\r\n    const getSidenavWidth = () => {\r\n        switch (mode) {\r\n            case 'compact':\r\n                return 'var(--sidenav-compact-width)'\r\n            default:\r\n                return 'var(--sidenav-width)'\r\n        }\r\n    }\r\n\r\n    const primaryRGB = convertHexToRGB(theme.palette.primary.main)\r\n    const classes = useStyles({\r\n        ...leftSidebar,\r\n        width: getSidenavWidth(),\r\n        primaryRGB,\r\n    })\r\n\r\n    const updateSidebarMode = (sidebarSettings) => {\r\n        updateSettings({\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    ...sidebarSettings,\r\n                },\r\n            },\r\n        })\r\n    }\r\n\r\n    const handleSidenavToggle = () => {\r\n        updateSidebarMode({ mode: mode === 'compact' ? 'full' : 'compact' })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.sidenav}>\r\n            <div className=\"flex-column relative h-full\">\r\n                <Brand>\r\n                    <Hidden smDown>\r\n                        <Switch\r\n                            onChange={handleSidenavToggle}\r\n                            checked={leftSidebar.mode !== 'full'}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                        />\r\n                    </Hidden>\r\n                </Brand>\r\n                <Sidenav />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Layout1Sidenav)\r\n","import React from 'react'\r\nimport { ThemeProvider, makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport { \r\n    // Button, \r\n    Toolbar, AppBar, Card } from '@material-ui/core'\r\nimport clsx from 'clsx'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport configuration from '../../config/configuration'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    footer: {\r\n        minHeight: 'var(--topbar-height)',\r\n        '@media (max-width: 499px)': {\r\n            display: 'table',\r\n            width: '100%',\r\n            minHeight: 'auto',\r\n            padding: '1rem 0',\r\n            '& .container': {\r\n                flexDirection: 'column !important',\r\n                '& a': {\r\n                    margin: '0 0 16px !important',\r\n                },\r\n            },\r\n        },\r\n    },\r\n    appbar: {\r\n        zIndex: 96,\r\n    },\r\n}))\r\n\r\nconst Footer = () => {\r\n    const classes = useStyles()\r\n    const theme = useTheme()\r\n    const { settings } = useSettings()\r\n\r\n    const footerTheme = settings.themes[settings.footer.theme] || theme\r\n\r\n    const github = configuration.github;\r\n    const portfolio = configuration.portfolio;\r\n\r\n    return (\r\n        <ThemeProvider theme={footerTheme}>\r\n            <AppBar\r\n                color=\"primary\"\r\n                position=\"static\"\r\n                className={classes.appbar}\r\n            >\r\n                <Toolbar className={clsx('flex items-center', classes.footer)}>\r\n                    <div className=\"flex items-center container w-full\">\r\n                        {/* <a\r\n              href=\"https://github.com/uilibrary/matx-react\"\r\n              href=\"https://ui-lib.com/downloads/matx-pro-react-admin/\"\r\n              target=\"_blank\"\r\n              className=\"mr-2\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <Button variant=\"contained\">Download Free version</Button>\r\n            </a> */}\r\n                        {/* <a href=\"\"> */}\r\n                        <Card>\r\n                            <a href={github?.authorUrl} className=\"thing\" tabIndex=\"0\" target='_blank' rel=\"noopener noreferrer\">{github?.name}</a>\r\n                        </Card>\r\n                        {/* <Button variant=\"contained\" color=\"secondary\">\r\n                            Get MatX Pro\r\n                        </Button> */}\r\n                        {/* </a> */}\r\n                        <span className=\"m-auto\"></span>\r\n                        <p className=\"m-0\">\r\n                            {portfolio?.tagline || ''} | \r\n                            <a href={github?.authorUrl} className=\"thing\" tabIndex=\"1\" target='_blank' rel=\"noopener noreferrer\"> {github?.username}</a>\r\n                        </p>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from 'react'\r\n// import { Fab, IconButton, Icon } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    toggle: {\r\n        position: 'fixed',\r\n        right: '30px',\r\n        bottom: '50px',\r\n        zIndex: 99,\r\n        transition: 'all 0.15s ease',\r\n        '&.open': {\r\n            right: '10px',\r\n        },\r\n    },\r\n}))\r\n\r\nconst SecondarySidebarToggle = () => {\r\n    // const isMobile = useMediaQuery(\"(max-width:767px)\");\r\n    const classes = useStyles()\r\n    const { settings, \r\n        // updateSettings\r\n     } = useSettings()\r\n\r\n    // const toggle = () => {\r\n    //     updateSettings({\r\n    //         secondarySidebar: { open: !settings.secondarySidebar.open },\r\n    //     })\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //   updateSettings({\r\n    //     secondarySidebar: { open: !isMobile },\r\n    //   });\r\n    // }, [isMobile]);\r\n\r\n    return (\r\n        <div\r\n            className={clsx({\r\n                [classes.toggle]: true,\r\n                open: settings.secondarySidebar.open,\r\n            })}\r\n        >\r\n            {/* Commenting this since we dont need settings now -- Portfolio Changes */}\r\n\r\n            {/* {settings.secondarySidebar.open && (\r\n                <IconButton onClick={toggle} size=\"small\" aria-label=\"toggle\">\r\n                    <Icon>close</Icon>\r\n                </IconButton>\r\n            )}\r\n\r\n            {!settings.secondarySidebar.open && (\r\n                <Fab\r\n                    // variant=\"extended\"\r\n                    // size=\"small\"\r\n                    color=\"primary\"\r\n                    aria-label=\"expand\"\r\n                    className=\"\"\r\n                    onClick={toggle}\r\n                >\r\n                    <Icon>settings</Icon>\r\n                </Fab>\r\n            )} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SecondarySidebarToggle\r\n","import { Badge } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nconst BadgeSelected = withStyles((theme) => ({\r\n    badge: {\r\n        top: '0',\r\n        right: '0',\r\n        height: '32px',\r\n        width: '32px',\r\n        borderRadius: '50%',\r\n    },\r\n}))(Badge)\r\n\r\nexport default BadgeSelected\r\n","import React, { Fragment, useState } from 'react'\r\nimport {\r\n    Icon,\r\n    IconButton,\r\n    Button,\r\n    // FormGroup,\r\n    // Switch,\r\n    // FormControlLabel,\r\n    // FormControl,\r\n    // FormLabel,\r\n    Card,\r\n    Tooltip,\r\n    Drawer,\r\n    Link,\r\n} from '@material-ui/core'\r\nimport Scrollbar from 'react-perfect-scrollbar'\r\n// import Layout1Customizer from \"./Layout1Customizer\";\r\n// import Layout2Customizer from \"./Layout2Customizer\";\r\n// import { themeColors } from \"../../MatxTheme/themeColors\";\r\nimport BadgeSelected from './BadgeSelected'\r\n// import { mainThemes, topbarThemes } from \"./customizerOptions\";\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\n\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    label: {\r\n        color: palette.secondary.main,\r\n        backgroundColor: palette.primary.dark,\r\n        fontWeight: 700,\r\n        transform: 'rotate(90deg)',\r\n        marginBottom: '2.5rem',\r\n        padding: '.25rem .5rem',\r\n        borderRadius: '4px',\r\n        cursor: 'pointer',\r\n        letterSpacing: '1.5px',\r\n        fontSize: '1rem',\r\n        '&:hover, &.open': {\r\n            backgroundColor: palette.secondary.main,\r\n            color: palette.secondary.contrastText,\r\n        },\r\n    },\r\n    helpText: {\r\n        margin: '0px .5rem 1rem',\r\n    },\r\n    maxCustomizer: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        zIndex: 50,\r\n    },\r\n    customizerCloseButton: {\r\n        position: 'absolute',\r\n        right: 8,\r\n        top: 8,\r\n    },\r\n    layoutBox: {\r\n        '&:hover': {\r\n            '& .layout-name': {\r\n                position: 'absolute',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: '100%',\r\n                width: '100%',\r\n                background: 'rgba(0,0,0,0.3)',\r\n                zIndex: 12,\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nconst MatxCustomizer = (props) => {\r\n    const [open, setOpen] = useState(false)\r\n    const [tabIndex, setTabIndex] = useState(0)\r\n\r\n    const classes = useStyles()\r\n    const { settings, updateSettings } = useSettings()\r\n\r\n    // const handleChange = (name, value) => {\r\n    //   let updatedSettings = set(settings, name, value);\r\n\r\n    //   updateSettings(updatedSettings);\r\n    // };\r\n\r\n    // const handleControlChange = (name) => (event) => {\r\n    //   let controlValue =\r\n    //     event.target.type === \"checkbox\"\r\n    //       ? event.target.checked\r\n    //       : event.target.value;\r\n    //   handleChange(name, controlValue);\r\n    // };\r\n\r\n    const tooglePanel = () => {\r\n        setOpen(!open)\r\n    }\r\n    const handleTabChange = (index) => {\r\n        setTabIndex(index)\r\n    }\r\n\r\n    let activeTheme = { ...settings.themes[settings.activeTheme] }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Tooltip title=\"Theme Settings\" placement=\"left\">\r\n                <span\r\n                    className={clsx({ [classes.label]: true, open })}\r\n                    onClick={tooglePanel}\r\n                >\r\n                    DEMOS\r\n                </span>\r\n            </Tooltip>\r\n\r\n            {/* {open && ( */}\r\n            <ThemeProvider theme={activeTheme}>\r\n                <Drawer\r\n                    anchor={'right'}\r\n                    open={open}\r\n                    variant=\"temporary\"\r\n                    onClose={tooglePanel}\r\n                    ModalProps={{\r\n                        keepMounted: true,\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={clsx(\r\n                            'flex-column w-320 pb-8 elevation-z12 h-full-screen bg-default',\r\n                            classes.maxCustomizer\r\n                        )}\r\n                    >\r\n                        <div className=\"flex items-center px-5 py-4 mb-4 min-h-64 elevation-z6\">\r\n                            <Icon color=\"primary\">settings</Icon>\r\n                            <h5 className=\"mb-0 ml-2\">Theme Settings</h5>\r\n                            <IconButton\r\n                                onClick={tooglePanel}\r\n                                className={classes.customizerCloseButton}\r\n                            >\r\n                                <Icon>close</Icon>\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className=\"px-6 mb-4 flex\">\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color={tabIndex === 0 ? 'secondary' : 'primary'}\r\n                                onClick={() => handleTabChange(0)}\r\n                                className=\"mr-4\"\r\n                            >\r\n                                Demos\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color={tabIndex === 1 ? 'secondary' : 'primary'}\r\n                                onClick={() => handleTabChange(1)}\r\n                            >\r\n                                Settings\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <Scrollbar\r\n                            options={{ suppressScrollX: true }}\r\n                            className=\"px-4\"\r\n                        >\r\n                            {tabIndex === 0 && (\r\n                                <div className=\"mb-8 mx-2\">\r\n                                    <div className=\"text-muted\">Layouts</div>\r\n\r\n                                    <div className=\"flex-column\">\r\n                                        {demoLayouts.map((layout) => (\r\n                                            <BadgeSelected\r\n                                                color=\"secondary\"\r\n                                                className={clsx(\r\n                                                    'w-full my-3 max-h-152 cursor-pointer',\r\n                                                    classes.layoutBox\r\n                                                )}\r\n                                                badgeContent={'Pro'}\r\n                                                invisible={!layout.isPro}\r\n                                                key={layout.name}\r\n                                            >\r\n                                                <Card\r\n                                                    className=\"relative\"\r\n                                                    onClick={() =>\r\n                                                        updateSettings(\r\n                                                            layout.options\r\n                                                        )\r\n                                                    }\r\n                                                    elevation={4}\r\n                                                >\r\n                                                    <div className=\"layout-name hidden\">\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"secondary\"\r\n                                                        >\r\n                                                            {layout.name}\r\n                                                        </Button>\r\n                                                    </div>\r\n\r\n                                                    <img\r\n                                                        className=\"w-full\"\r\n                                                        src={layout.thumbnail}\r\n                                                        alt={layout.name}\r\n                                                    />\r\n                                                </Card>\r\n                                            </BadgeSelected>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* END LAYOUT */}\r\n\r\n                            {tabIndex === 1 && (\r\n                                <div>\r\n                                    <div className={classes.helpText}>\r\n                                        We used React context API to control\r\n                                        layout. Check out the{' '}\r\n                                        <Link\r\n                                            href=\"http://demos.ui-lib.com/matx-react-doc/layout.html\"\r\n                                            target=\"_blank\"\r\n                                        >\r\n                                            Documentation\r\n                                        </Link>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            )}\r\n                        </Scrollbar>\r\n                    </div>\r\n                </Drawer>\r\n            </ThemeProvider>\r\n            {/* )} */}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst demoLayouts = [\r\n    {\r\n        name: 'Light Sidebar',\r\n        thumbnail: '/assets/images/screenshots/layout1-customizer.png',\r\n        isPro: false,\r\n        options: {\r\n            activeLayout: 'layout1',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    mode: 'full',\r\n                    theme: 'whiteBlue',\r\n                    bgOpacity: 0.98,\r\n                },\r\n                topbar: {\r\n                    theme: 'blueDark',\r\n                    fixed: true,\r\n                },\r\n            },\r\n            footer: {\r\n                theme: 'slateDark1',\r\n            },\r\n        },\r\n    },\r\n    {\r\n        name: 'Compact Sidebar',\r\n        thumbnail: '/assets/images/screenshots/layout5-customizer.png',\r\n        isPro: false,\r\n        options: {\r\n            activeLayout: 'layout1',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    mode: 'compact',\r\n                    theme: 'slateDark1',\r\n                    bgOpacity: 0.92,\r\n                },\r\n                topbar: {\r\n                    theme: 'whiteBlue',\r\n                    fixed: true,\r\n                },\r\n            },\r\n        },\r\n    },\r\n    {\r\n        name: 'Dark Sidebar',\r\n        thumbnail: '/assets/images/screenshots/layout1-blue-customizer.png',\r\n        isPro: false,\r\n        options: {\r\n            activeLayout: 'layout1',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    mode: 'full',\r\n                    theme: 'slateDark1',\r\n                    bgOpacity: 0.92,\r\n                },\r\n                topbar: {\r\n                    theme: 'blueDark',\r\n                    fixed: true,\r\n                },\r\n            },\r\n        },\r\n    },\r\n    {\r\n        name: 'Dark Theme',\r\n        thumbnail: '/assets/images/screenshots/layout3-customizer.png',\r\n        isPro: true,\r\n        options: {\r\n            activeLayout: 'layout2',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    mode: 'full',\r\n                    theme: 'slateDark1',\r\n                    bgOpacity: 0.92,\r\n                },\r\n                topbar: {\r\n                    theme: 'purpleDark1',\r\n                    fixed: true,\r\n                },\r\n            },\r\n            footer: {\r\n                theme: 'slateDark1',\r\n            },\r\n        },\r\n    },\r\n    {\r\n        name: 'Horizontal Navigation',\r\n        thumbnail: '/assets/images/screenshots/layout4-customizer.png',\r\n        isPro: true,\r\n        options: {\r\n            activeLayout: 'layout2',\r\n            activeTheme: 'purple1',\r\n            layout2Settings: {\r\n                mode: 'full',\r\n            },\r\n            footer: {\r\n                theme: 'slateDark1',\r\n            },\r\n        },\r\n    },\r\n]\r\n\r\nexport default MatxCustomizer\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Icon, Badge, IconButton, Drawer, Button } from '@material-ui/core'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    getCartList,\r\n    deleteProductFromCart,\r\n    updateCartAmount,\r\n} from 'app/redux/actions/EcommerceActions'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport useAuth from 'app/hooks/useAuth'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    miniCart: {\r\n        width: 'var(--sidenav-width)',\r\n        '& .cart__topbar': {\r\n            height: 'var(--topbar-height)',\r\n        },\r\n        '& .mini-cart__item': {\r\n            transition: 'background 300ms ease',\r\n            '&:hover': {\r\n                background: 'rgba(0,0,0,0.01)',\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nlet cartListLoaded = false\r\n\r\nfunction ShoppingCart({ container }) {\r\n    const [totalCost, setTotalCost] = useState(0)\r\n    const [panelOpen, setPanelOpen] = useState(false)\r\n\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const { user } = useAuth()\r\n    const { cartList } = useSelector((state) => state.ecommerce)\r\n    const { settings } = useSettings()\r\n\r\n    if (!cartListLoaded) {\r\n        dispatch(getCartList(user.id))\r\n        cartListLoaded = true\r\n    }\r\n\r\n    const handleDrawerToggle = () => {\r\n        setPanelOpen(!panelOpen)\r\n    }\r\n\r\n    const handleCheckoutClick = () => {\r\n        if (totalCost > 0) {\r\n            history.push('/ecommerce/checkout')\r\n            setPanelOpen(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let total = 0\r\n\r\n        cartList.forEach((product) => {\r\n            total += product.price * product.amount\r\n        })\r\n\r\n        setTotalCost(total)\r\n    }, [cartList])\r\n\r\n    return (\r\n        <Fragment>\r\n            <IconButton onClick={handleDrawerToggle}>\r\n                <Badge color=\"secondary\" badgeContent={cartList.length}>\r\n                    <Icon>shopping_cart</Icon>\r\n                </Badge>\r\n            </IconButton>\r\n\r\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n                <Drawer\r\n                    container={container}\r\n                    variant=\"temporary\"\r\n                    anchor={'right'}\r\n                    open={panelOpen}\r\n                    onClose={handleDrawerToggle}\r\n                    ModalProps={{\r\n                        keepMounted: true,\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={clsx('flex-column h-full', classes.miniCart)}\r\n                    >\r\n                        <div className=\"cart__topbar elevation-z6 flex items-center p-1 mb-2 pl-4\">\r\n                            <Icon color=\"primary\">shopping_cart</Icon>\r\n                            <h5 className=\"ml-2 my-0 font-medium\">Cart</h5>\r\n                        </div>\r\n\r\n                        <div className=\"flex-grow overflow-auto\">\r\n                            {cartList.map((product) => (\r\n                                <div\r\n                                    key={product.id}\r\n                                    className=\"mini-cart__item flex items-center py-2 px-2\"\r\n                                >\r\n                                    <div className=\"flex flex-column mr-1\">\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() =>\r\n                                                dispatch(\r\n                                                    updateCartAmount(\r\n                                                        user.id,\r\n                                                        product.id,\r\n                                                        product.amount + 1\r\n                                                    )\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            <Icon className=\"cursor-pointer\">\r\n                                                keyboard_arrow_up\r\n                                            </Icon>\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            disabled={!(product.amount - 1)}\r\n                                            size=\"small\"\r\n                                            onClick={() =>\r\n                                                dispatch(\r\n                                                    updateCartAmount(\r\n                                                        user.id,\r\n                                                        product.id,\r\n                                                        product.amount - 1\r\n                                                    )\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            <Icon className=\"cursor-pointer\">\r\n                                                keyboard_arrow_down\r\n                                            </Icon>\r\n                                        </IconButton>\r\n                                    </div>\r\n                                    <div className=\"mr-2\">\r\n                                        <img\r\n                                            className=\"w-48\"\r\n                                            src={product.imgUrl}\r\n                                            alt={product.title}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"mr-2 text-center flex-grow flex-column\">\r\n                                        <h6 className=\"m-0 mb-1 ellipsis w-120\">\r\n                                            {product.title}\r\n                                        </h6>\r\n                                        <small className=\"text-muted\">\r\n                                            ${product.price} x {product.amount}\r\n                                        </small>\r\n                                    </div>\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        onClick={() =>\r\n                                            dispatch(\r\n                                                deleteProductFromCart(\r\n                                                    user.userId,\r\n                                                    product.id\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <Icon fontSize=\"small\">clear</Icon>\r\n                                    </IconButton>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        <Button\r\n                            className=\"w-full border-radius-0\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleCheckoutClick}\r\n                        >\r\n                            Checkout (${totalCost.toFixed(2)})\r\n                        </Button>\r\n                    </div>\r\n                </Drawer>\r\n            </ThemeProvider>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ShoppingCart\r\n","import React from 'react'\r\nimport { IconButton, Icon } from '@material-ui/core'\r\nimport MatxCustomizer from '../MatxCustomizer/MatxCustomizer'\r\nimport ShoppingCart from '../ShoppingCart/ShoppingCart'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport { ChatHead } from 'app/components'\r\nimport { Chatbox } from 'app/components'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    root: {\r\n        position: 'fixed',\r\n        height: '100vh',\r\n        width: (props) => props.width,\r\n        right: 0,\r\n        bottom: 0,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        boxShadow: theme.shadows[8],\r\n        backgroundColor: palette.primary.main,\r\n        zIndex: 98,\r\n        transition: 'all 0.15s ease',\r\n    },\r\n    '@global': {\r\n        '@media screen and (min-width: 767px)': {\r\n            '.content-wrap, .layout2.layout-contained, .layout2.layout-full': {\r\n                marginRight: (props) => props.width,\r\n            },\r\n            '.matx-customizer': {\r\n                right: (props) => props.width,\r\n            },\r\n        },\r\n        '@media screen and (max-width: 959px)': {\r\n            '.toolbar-menu-wrap .menu-area': {\r\n                width: (props) => `calc(100% - ${props.width})`,\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nconst SecondarySidebarContent = () => {\r\n    const classes = useStyles({ width: '50px' })\r\n\r\n    return (\r\n        <div className={clsx('secondary-sidebar', classes.root)}>\r\n            <span className=\"m-auto\"></span>\r\n\r\n            <MatxCustomizer />\r\n\r\n            <ShoppingCart />\r\n\r\n            <ChatHead\r\n                icon={\r\n                    <IconButton className=\"my-3\" size=\"small\">\r\n                        <Icon>comments</Icon>\r\n                    </IconButton>\r\n                }\r\n            >\r\n                <Chatbox />\r\n            </ChatHead>\r\n\r\n            <span className=\"m-auto\"></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SecondarySidebarContent\r\n","import React from 'react'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\n\r\nconst SecondarySidenavTheme = ({ theme, classes, children, open }) => {\r\n    return <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n}\r\nexport default SecondarySidenavTheme\r\n","import React from 'react'\r\nimport SecondarySidebarToggle from './SecondarySidebarToggle'\r\nimport SecondarySidebarContent from './SecondarySidebarContent'\r\nimport SecondarySidenavTheme from '../MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme'\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst SecondarySidebar = () => {\r\n    const { settings } = useSettings()\r\n    const secondarySidebarTheme =\r\n        settings.themes[settings.secondarySidebar.theme]\r\n\r\n    return (\r\n        <SecondarySidenavTheme theme={secondarySidebarTheme}>\r\n            {settings.secondarySidebar.open && <SecondarySidebarContent />}\r\n            <SecondarySidebarToggle />\r\n        </SecondarySidenavTheme>\r\n    )\r\n}\r\n\r\nexport default SecondarySidebar\r\n","import React from 'react'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport { useTheme } from '@material-ui/core/styles'\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst SidenavTheme = ({ children }) => {\r\n    const theme = useTheme()\r\n    const { settings } = useSettings()\r\n    const sidenavTheme =\r\n        settings.themes[settings.layout1Settings.leftSidebar.theme] || theme\r\n\r\n    return <ThemeProvider theme={sidenavTheme}>{children}</ThemeProvider>\r\n}\r\n\r\nexport default SidenavTheme\r\n","import React, { useContext, useEffect, useRef } from 'react'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport { useMediaQuery } from '@material-ui/core'\r\nimport Scrollbar from 'react-perfect-scrollbar'\r\nimport { renderRoutes } from 'react-router-config'\r\nimport Layout1Topbar from './Layout1Topbar'\r\nimport Layout1Sidenav from './Layout1Sidenav'\r\nimport Footer from '../../Footer/Footer'\r\nimport SecondarySidebar from '../../SecondarySidebar/SecondarySidebar'\r\nimport AppContext from 'app/contexts/AppContext'\r\nimport { MatxSuspense } from 'app/components'\r\nimport { useTheme } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport SidenavTheme from '../../MatxTheme/SidenavTheme/SidenavTheme'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    contentWrap: ({ width, secondarySidebar }) => {\r\n        return {\r\n            verticalAlign: 'top',\r\n            marginLeft: width,\r\n            transition: 'all 0.3s ease',\r\n            // [theme.breakpoints.up(\"sm\")]: {\r\n            marginRight: secondarySidebar.open ? 50 : 0,\r\n            // },\r\n        }\r\n    },\r\n    topbar: {\r\n        top: 0,\r\n        zIndex: 96,\r\n        background:\r\n            'linear-gradient(180deg, rgba(255, 255, 255, 0.95) 44%, rgba(247, 247, 247, 0.4) 50%, rgba(255, 255, 255, 0))',\r\n        transition: 'all 0.3s ease',\r\n    },\r\n}))\r\n\r\nconst Layout1 = () => {\r\n    const { settings, updateSettings } = useSettings()\r\n    const { layout1Settings, secondarySidebar } = settings\r\n    const {\r\n        leftSidebar: { mode: sidenavMode, show: showSidenav },\r\n    } = layout1Settings\r\n    const { routes } = useContext(AppContext)\r\n\r\n    const getSidenavWidth = () => {\r\n        switch (sidenavMode) {\r\n            case 'full':\r\n                return 'var(--sidenav-width)'\r\n            case 'compact':\r\n                return 'var(--sidenav-compact-width)'\r\n            default:\r\n                return '0px'\r\n        }\r\n    }\r\n\r\n    const sidenavWidth = getSidenavWidth()\r\n    let classes = useStyles({ width: sidenavWidth, secondarySidebar })\r\n    const theme = useTheme()\r\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\r\n\r\n    const ref = useRef({ isMdScreen, settings })\r\n\r\n    const topbarTheme = settings.themes[layout1Settings.topbar.theme]\r\n    const layoutClasses = `theme-${theme.palette.type} flex`\r\n\r\n    useEffect(() => {\r\n        let { settings } = ref.current\r\n        let sidebarMode = settings.layout1Settings.leftSidebar.mode\r\n        if (settings.layout1Settings.leftSidebar.show) {\r\n            let mode = isMdScreen ? 'close' : sidebarMode\r\n            updateSettings({ layout1Settings: { leftSidebar: { mode } } })\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isMdScreen])\r\n\r\n    return (\r\n        <div className={clsx('bg-default', layoutClasses)}>\r\n            {showSidenav && sidenavMode !== 'close' && (\r\n                <SidenavTheme>\r\n                    <Layout1Sidenav />\r\n                </SidenavTheme>\r\n            )}\r\n\r\n            <div\r\n                className={clsx(\r\n                    'flex-grow flex-column relative overflow-hidden h-full-screen',\r\n                    classes.contentWrap\r\n                )}\r\n            >\r\n                {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\r\n                    <ThemeProvider theme={topbarTheme}>\r\n                        <Layout1Topbar fixed={true} className=\"elevation-z8\" />\r\n                    </ThemeProvider>\r\n                )}\r\n\r\n                {settings.perfectScrollbar && (\r\n                    <Scrollbar className=\"flex-grow flex-column relative h-full\">\r\n                        {layout1Settings.topbar.show &&\r\n                            !layout1Settings.topbar.fixed && (\r\n                                <ThemeProvider theme={topbarTheme}>\r\n                                    <Layout1Topbar />\r\n                                </ThemeProvider>\r\n                            )}\r\n                        <div className=\"relative flex-grow\">\r\n                            <MatxSuspense>{renderRoutes(routes)}</MatxSuspense>\r\n                        </div>\r\n                        {settings.footer.show && !settings.footer.fixed && (\r\n                            <Footer />\r\n                        )}\r\n                    </Scrollbar>\r\n                )}\r\n\r\n                {!settings.perfectScrollbar && (\r\n                    <div className=\"flex-grow flex-column relative h-full scroll-y\">\r\n                        {layout1Settings.topbar.show &&\r\n                            !layout1Settings.topbar.fixed && (\r\n                                <ThemeProvider theme={topbarTheme}>\r\n                                    <Layout1Topbar />\r\n                                </ThemeProvider>\r\n                            )}\r\n                        <div className=\"relative flex-grow\">\r\n                            <MatxSuspense>{renderRoutes(routes)}</MatxSuspense>\r\n                        </div>\r\n                        {settings.footer.show && !settings.footer.fixed && (\r\n                            <Footer />\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {settings.footer.show && settings.footer.fixed && <Footer />}\r\n            </div>\r\n            {settings.secondarySidebar.show && <SecondarySidebar />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Layout1)\r\n"],"sourceRoot":""}