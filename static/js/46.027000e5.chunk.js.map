{"version":3,"sources":["app/views/material-kit/dialog/SimpleDialog.jsx","app/views/material-kit/dialog/SimpleAlerts.jsx","app/views/material-kit/dialog/DialogTransition.jsx","app/views/material-kit/dialog/FormDialog.jsx","app/views/material-kit/dialog/CustomizedDialog.jsx","app/views/material-kit/dialog/FullScreenDialog.jsx","app/views/material-kit/dialog/OptimalSizeDialog.jsx","app/views/material-kit/dialog/ResponsiveDialog.jsx","app/views/material-kit/dialog/ConfirmationDialog.jsx","app/views/material-kit/dialog/AppDialog.jsx"],"names":["emails","useStyles","makeStyles","avatar","backgroundColor","blue","color","SimpleDialog","props","classes","onClose","selectedValue","other","handleListItemClick","value","Dialog","aria-labelledby","DialogTitle","id","List","map","email","ListItem","button","onClick","key","ListItemAvatar","Avatar","className","ListItemText","primary","SimpleDialogDemo","React","useState","open","setOpen","setSelectedValue","Typography","variant","Button","AlertDialog","handleClose","aria-describedby","DialogContent","DialogContentText","DialogActions","autoFocus","Transition","forwardRef","ref","Slide","direction","AlertDialogSlide","TransitionComponent","keepMounted","FormDialog","TextField","margin","label","type","fullWidth","withStyles","theme","root","padding","spacing","closeButton","position","right","top","palette","grey","children","disableTypography","IconButton","aria-label","MuiDialogContent","MuiDialogActions","CustomizedDialogs","state","handleClickOpen","setState","this","dividers","gutterBottom","Component","appBar","title","marginLeft","flex","FullScreenDialog","fullScreen","AppBar","Toolbar","edge","secondary","Divider","form","display","flexDirection","width","formControl","marginTop","minWidth","formControlLabel","MaxWidthDialog","setFullWidth","maxWidth","setMaxWidth","Fragment","noValidate","FormControl","InputLabel","htmlFor","Select","onChange","event","target","inputProps","name","MenuItem","FormControlLabel","control","Switch","checked","ResponsiveDialog","useTheme","useMediaQuery","breakpoints","down","options","ConfirmationDialogRaw","valueProp","setValue","radioGroupRef","useRef","useEffect","disableBackdropClick","disableEscapeKeyDown","onEntering","current","focus","RadioGroup","newValue","option","Radio","background","paper","maxHeight","ConfirmationDialog","component","role","divider","disabled","aria-controls","AppDialog","routeSegments","path","CustomizedDialog"],"mappings":"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","file":"static/js/46.027000e5.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { blue } from '@material-ui/core/colors'\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com']\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n})\r\n\r\nfunction SimpleDialog(props) {\r\n    const classes = useStyles()\r\n    const { onClose, selectedValue, ...other } = props\r\n\r\n    function handleClose() {\r\n        onClose(selectedValue)\r\n    }\r\n\r\n    function handleListItemClick(value) {\r\n        onClose(value)\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-dialog-title\"\r\n            {...other}\r\n        >\r\n            <DialogTitle id=\"simple-dialog-title\">\r\n                Set backup account\r\n            </DialogTitle>\r\n            <List>\r\n                {emails.map((email) => (\r\n                    <ListItem\r\n                        button\r\n                        onClick={() => handleListItemClick(email)}\r\n                        key={email}\r\n                    >\r\n                        <ListItemAvatar>\r\n                            <Avatar className={classes.avatar}>\r\n                                <PersonIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={email} />\r\n                    </ListItem>\r\n                ))}\r\n\r\n                <ListItem\r\n                    button\r\n                    onClick={() => handleListItemClick('addAccount')}\r\n                >\r\n                    <ListItemAvatar>\r\n                        <Avatar>\r\n                            <AddIcon />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary=\"add account\" />\r\n                </ListItem>\r\n            </List>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n    onClose: PropTypes.func,\r\n    open: PropTypes.bool,\r\n    selectedValue: PropTypes.string,\r\n}\r\n\r\nexport default function SimpleDialogDemo() {\r\n    const [open, setOpen] = React.useState(false)\r\n    const [selectedValue, setSelectedValue] = React.useState(emails[1])\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = (value) => {\r\n        setOpen(false)\r\n        setSelectedValue(value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"subtitle1\">\r\n                Selected: {selectedValue}\r\n            </Typography>\r\n            <br />\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Open simple dialog\r\n            </Button>\r\n            <SimpleDialog\r\n                selectedValue={selectedValue}\r\n                open={open}\r\n                onClose={handleClose}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\nexport default function AlertDialog() {\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Open alert dialog\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Use Google's location service?\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Let Google help apps determine location. This means\r\n                        sending anonymous location data to Google, even when no\r\n                        apps are running.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Disagree\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Agree\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Slide from '@material-ui/core/Slide'\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\nexport default function AlertDialogSlide() {\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Slide in alert dialog\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">\r\n                    {\"Use Google's location service?\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Let Google help apps determine location. This means\r\n                        sending anonymous location data to Google, even when no\r\n                        apps are running.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Disagree\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Agree\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\nexport default function FormDialog() {\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Open form dialog\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To subscribe to this website, please enter your email\r\n                        address here. We will send updates occasionally.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        onClick={handleClose}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Subscribe\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle'\r\nimport MuiDialogContent from '@material-ui/core/DialogContent'\r\nimport MuiDialogActions from '@material-ui/core/DialogActions'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n})\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose } = props\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label=\"Close\"\r\n                    className={classes.closeButton}\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    )\r\n})\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent)\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions)\r\n\r\nclass CustomizedDialogs extends React.Component {\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({\r\n            open: true,\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    onClick={this.handleClickOpen}\r\n                >\r\n                    Open dialog\r\n                </Button>\r\n                <Dialog\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.state.open}\r\n                >\r\n                    <DialogTitle\r\n                        id=\"customized-dialog-title\"\r\n                        onClose={this.handleClose}\r\n                    >\r\n                        Modal title\r\n                    </DialogTitle>\r\n                    <DialogContent dividers>\r\n                        <Typography gutterBottom>\r\n                            Cras mattis consectetur purus sit amet fermentum.\r\n                            Cras justo odio, dapibus ac facilisis in, egestas\r\n                            eget quam. Morbi leo risus, porta ac consectetur ac,\r\n                            vestibulum at eros.\r\n                        </Typography>\r\n                        <Typography gutterBottom>\r\n                            Praesent commodo cursus magna, vel scelerisque nisl\r\n                            consectetur et. Vivamus sagittis lacus vel augue\r\n                            laoreet rutrum faucibus dolor auctor.\r\n                        </Typography>\r\n                        <Typography gutterBottom>\r\n                            Aenean lacinia bibendum nulla sed consectetur.\r\n                            Praesent commodo cursus magna, vel scelerisque nisl\r\n                            consectetur et. Donec sed odio dui. Donec\r\n                            ullamcorper nulla non metus auctor fringilla.\r\n                        </Typography>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Save changes\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomizedDialogs\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport List from '@material-ui/core/List'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Slide from '@material-ui/core/Slide'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\nexport default function FullScreenDialog() {\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Open full-screen dialog\r\n            </Button>\r\n            <Dialog\r\n                fullScreen\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Transition}\r\n            >\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            onClick={handleClose}\r\n                            aria-label=\"Close\"\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            Sound\r\n                        </Typography>\r\n                        <Button color=\"inherit\" onClick={handleClose}>\r\n                            save\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <List>\r\n                    <ListItem button>\r\n                        <ListItemText\r\n                            primary=\"Phone ringtone\"\r\n                            secondary=\"Titania\"\r\n                        />\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem button>\r\n                        <ListItemText\r\n                            primary=\"Default notification ringtone\"\r\n                            secondary=\"Tethys\"\r\n                        />\r\n                    </ListItem>\r\n                </List>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Select from '@material-ui/core/Select'\r\nimport Switch from '@material-ui/core/Switch'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: 'auto',\r\n        width: 'fit-content',\r\n    },\r\n    formControl: {\r\n        marginTop: theme.spacing(2),\r\n        minWidth: 120,\r\n    },\r\n    formControlLabel: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nexport default function MaxWidthDialog() {\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(false)\r\n    const [fullWidth, setFullWidth] = React.useState(true)\r\n    const [maxWidth, setMaxWidth] = React.useState('sm')\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n\r\n    function handleMaxWidthChange(event) {\r\n        setMaxWidth(event.target.value)\r\n    }\r\n\r\n    function handleFullWidthChange(event) {\r\n        setFullWidth(event.target.checked)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Open max-width dialog\r\n            </Button>\r\n            <Dialog\r\n                fullWidth={fullWidth}\r\n                maxWidth={maxWidth}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"max-width-dialog-title\">\r\n                    Optional sizes\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        You can set my maximum width and whether to adapt or\r\n                        not.\r\n                    </DialogContentText>\r\n                    <form className={classes.form} noValidate>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"max-width\">\r\n                                maxWidth\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={maxWidth}\r\n                                onChange={handleMaxWidthChange}\r\n                                inputProps={{\r\n                                    name: 'max-width',\r\n                                    id: 'max-width',\r\n                                }}\r\n                            >\r\n                                <MenuItem value={false}>false</MenuItem>\r\n                                <MenuItem value=\"xs\">xs</MenuItem>\r\n                                <MenuItem value=\"sm\">sm</MenuItem>\r\n                                <MenuItem value=\"md\">md</MenuItem>\r\n                                <MenuItem value=\"lg\">lg</MenuItem>\r\n                                <MenuItem value=\"xl\">xl</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControlLabel\r\n                            className={classes.formControlLabel}\r\n                            control={\r\n                                <Switch\r\n                                    checked={fullWidth}\r\n                                    onChange={handleFullWidthChange}\r\n                                    value=\"fullWidth\"\r\n                                />\r\n                            }\r\n                            label=\"Full width\"\r\n                        />\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\nimport { useTheme } from '@material-ui/core/styles'\r\n\r\nexport default function ResponsiveDialog() {\r\n    const [open, setOpen] = React.useState(false)\r\n    const theme = useTheme()\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Open responsive dialog\r\n            </Button>\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"responsive-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"responsive-dialog-title\">\r\n                    {\"Use Google's location service?\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Let Google help apps determine location. This means\r\n                        sending anonymous location data to Google, even when no\r\n                        apps are running.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Disagree\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Agree\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\n\r\nconst options = [\r\n    'None',\r\n    'Atria',\r\n    'Callisto',\r\n    'Dione',\r\n    'Ganymede',\r\n    'Hangouts Call',\r\n    'Luna',\r\n    'Oberon',\r\n    'Phobos',\r\n    'Pyxis',\r\n    'Sedna',\r\n    'Titania',\r\n    'Triton',\r\n    'Umbriel',\r\n]\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n    const { onClose, value: valueProp, open, ...other } = props\r\n    const [value, setValue] = React.useState(valueProp)\r\n    const radioGroupRef = React.useRef(null)\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setValue(valueProp)\r\n        }\r\n    }, [valueProp, open])\r\n\r\n    function handleEntering() {\r\n        if (radioGroupRef.current != null) {\r\n            radioGroupRef.current.focus()\r\n        }\r\n    }\r\n\r\n    function handleCancel() {\r\n        onClose()\r\n    }\r\n\r\n    function handleOk() {\r\n        onClose(value)\r\n    }\r\n\r\n    function handleChange(event, newValue) {\r\n        setValue(newValue)\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            maxWidth=\"xs\"\r\n            onEntering={handleEntering}\r\n            aria-labelledby=\"confirmation-dialog-title\"\r\n            open={open}\r\n            {...other}\r\n        >\r\n            <DialogTitle id=\"confirmation-dialog-title\">\r\n                Phone Ringtone\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <RadioGroup\r\n                    ref={radioGroupRef}\r\n                    aria-label=\"Ringtone\"\r\n                    name=\"ringtone\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                >\r\n                    {options.map((option) => (\r\n                        <FormControlLabel\r\n                            value={option}\r\n                            key={option}\r\n                            control={<Radio />}\r\n                            label={option}\r\n                        />\r\n                    ))}\r\n                </RadioGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    onClick={handleCancel}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={handleOk} color=\"primary\">\r\n                    Ok\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    paper: {\r\n        width: '80%',\r\n        maxHeight: 435,\r\n    },\r\n}))\r\n\r\nexport default function ConfirmationDialog() {\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(false)\r\n    const [value, setValue] = React.useState('Dione')\r\n\r\n    function handleClickListItem() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose(newValue) {\r\n        setOpen(false)\r\n\r\n        if (newValue) {\r\n            setValue(newValue)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <List component=\"div\" role=\"list\">\r\n                <ListItem button divider disabled role=\"listitem\">\r\n                    <ListItemText primary=\"Interruptions\" />\r\n                </ListItem>\r\n                <ListItem\r\n                    button\r\n                    divider\r\n                    aria-controls=\"ringtone-menu\"\r\n                    aria-label=\"Phone ringtone\"\r\n                    onClick={handleClickListItem}\r\n                    role=\"listitem\"\r\n                >\r\n                    <ListItemText primary=\"Phone ringtone\" secondary={value} />\r\n                </ListItem>\r\n                <ListItem button divider disabled role=\"listitem\">\r\n                    <ListItemText\r\n                        primary=\"Default notification ringtone\"\r\n                        secondary=\"Tethys\"\r\n                    />\r\n                </ListItem>\r\n                <ConfirmationDialogRaw\r\n                    classes={{\r\n                        paper: classes.paper,\r\n                    }}\r\n                    id=\"ringtone-menu\"\r\n                    keepMounted\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    value={value}\r\n                />\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Breadcrumb, SimpleCard } from 'app/components'\r\nimport SimpleDialogDemo from './SimpleDialog'\r\nimport AlertDialog from './SimpleAlerts'\r\nimport AlertDialogSlide from './DialogTransition'\r\nimport FormDialog from './FormDialog'\r\nimport CustomizedDialogs from './CustomizedDialog'\r\nimport FullScreenDialog from './FullScreenDialog'\r\nimport MaxWidthDialog from './OptimalSizeDialog'\r\nimport ResponsiveDialog from './ResponsiveDialog'\r\nimport ConfirmationDialog from './ConfirmationDialog'\r\n\r\nconst AppDialog = () => {\r\n    return (\r\n        <div className=\"m-sm-30\">\r\n            <div className=\"mb-sm-30\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Material', path: '/material' },\r\n                        { name: 'Dialog' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <SimpleCard title=\"simple Dialog\">\r\n                <SimpleDialogDemo />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"alert dialog\">\r\n                <AlertDialog />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"transition\">\r\n                <AlertDialogSlide />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"form dialog\">\r\n                <FormDialog />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"customized dialog\">\r\n                <CustomizedDialogs />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"full-screen dialog\">\r\n                <FullScreenDialog />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"optimized size dialog\">\r\n                <MaxWidthDialog />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"responsive dialog\">\r\n                <ResponsiveDialog />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"confirmation dialog\">\r\n                <ConfirmationDialog />\r\n            </SimpleCard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppDialog\r\n"],"sourceRoot":""}