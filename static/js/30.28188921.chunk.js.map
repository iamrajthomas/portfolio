{"version":3,"sources":["../node_modules/@material-ui/core/esm/Fab/Fab.js","app/views/forms/UploadForm.jsx"],"names":["Fab","React","props","ref","children","classes","className","_props$color","color","_props$component","component","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","focusVisibleClassName","_props$size","size","_props$variant","variant","other","_objectWithoutProperties","ButtonBase","_extends","clsx","root","extended","concat","capitalize","primary","secondary","colorInherit","focusRipple","focusVisible","label","withStyles","theme","typography","button","boxSizing","minHeight","transition","transitions","create","duration","short","borderRadius","padding","minWidth","width","height","boxShadow","shadows","palette","getContrastText","grey","backgroundColor","A100","action","disabledBackground","textDecoration","display","alignItems","justifyContent","contrastText","main","dark","sizeSmall","sizeMedium","name","UploadForm","useState","files","setFiles","queProgress","setQueProgress","dargClass","setDragClass","handleFileSelect","event","target","list","iterator","push","file","uploading","error","progress","isEmpty","length","routeSegments","path","title","htmlFor","onChange","id","type","multiple","onDragEnter","onDragOver","preventDefault","onDrop","persist","dataTransfer","elevation","container","spacing","justify","direction","item","lg","md","map","index","key","sm","xs","toFixed","value","onClick","allFiles","uploadSingleFile","handleSingleCancel","tempList","splice","handleSingleRemove"],"mappings":"0IAAA,+DAoIIA,EAAmBC,cAAiB,SAAaC,EAAOC,GAC1D,IAAIC,EAAWF,EAAME,SACjBC,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBC,EAAeL,EAAMM,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CE,EAAmBP,EAAMQ,UACzBA,OAAiC,IAArBD,EAA8B,SAAWA,EACrDE,EAAkBT,EAAMU,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAwBX,EAAMY,mBAC9BA,OAA+C,IAA1BD,GAA2CA,EAChEE,EAAwBb,EAAMa,sBAC9BC,EAAcd,EAAMe,KACpBA,OAAuB,IAAhBD,EAAyB,QAAUA,EAC1CE,EAAiBhB,EAAMiB,QACvBA,OAA6B,IAAnBD,EAA4B,QAAUA,EAChDE,EAAQC,YAAyBnB,EAAO,CAAC,WAAY,UAAW,YAAa,QAAS,YAAa,WAAY,qBAAsB,wBAAyB,OAAQ,YAE1K,OAAoBD,gBAAoBqB,IAAYC,YAAS,CAC3DjB,UAAWkB,YAAKnB,EAAQoB,KAAMnB,EAAuB,UAAZa,GAAuBd,EAAQqB,SAAmB,UAATT,GAAoBZ,EAAQ,OAAOsB,OAAOC,YAAWX,KAASL,GAAYP,EAAQO,SAAU,CAC5K,QAAWP,EAAQwB,QACnB,UAAaxB,EAAQyB,UACrB,QAAWzB,EAAQ0B,cACnBvB,IACFE,UAAWA,EACXE,SAAUA,EACVoB,aAAclB,EACdC,sBAAuBS,YAAKnB,EAAQ4B,aAAclB,GAClDZ,IAAKA,GACJiB,GAAqBnB,gBAAoB,OAAQ,CAClDK,UAAWD,EAAQ6B,OAClB9B,OA4EU+B,iBAxOK,SAAgBC,GAClC,MAAO,CAELX,KAAMF,YAAS,GAAIa,EAAMC,WAAWC,OAAQ,CAC1CC,UAAW,aACXC,UAAW,GACXC,WAAYL,EAAMM,YAAYC,OAAO,CAAC,mBAAoB,aAAc,UAAW,CACjFC,SAAUR,EAAMM,YAAYE,SAASC,QAEvCC,aAAc,MACdC,QAAS,EACTC,SAAU,EACVC,MAAO,GACPC,OAAQ,GACRC,UAAWf,EAAMgB,QAAQ,GACzB,WAAY,CACVD,UAAWf,EAAMgB,QAAQ,KAE3B5C,MAAO4B,EAAMiB,QAAQC,gBAAgBlB,EAAMiB,QAAQE,KAAK,MACxDC,gBAAiBpB,EAAMiB,QAAQE,KAAK,KACpC,UAAW,CACTC,gBAAiBpB,EAAMiB,QAAQE,KAAKE,KAEpC,uBAAwB,CACtBD,gBAAiBpB,EAAMiB,QAAQE,KAAK,MAEtC,aAAc,CACZC,gBAAiBpB,EAAMiB,QAAQK,OAAOC,oBAExCC,eAAgB,QAElB,iBAAkB,CAChBT,UAAWf,EAAMgB,QAAQ,IAE3B,aAAc,CACZ5C,MAAO4B,EAAMiB,QAAQK,OAAO9C,SAC5BuC,UAAWf,EAAMgB,QAAQ,GACzBI,gBAAiBpB,EAAMiB,QAAQK,OAAOC,sBAK1CzB,MAAO,CACLe,MAAO,OAEPY,QAAS,UACTC,WAAY,UACZC,eAAgB,WAIlBlC,QAAS,CACPrB,MAAO4B,EAAMiB,QAAQxB,QAAQmC,aAC7BR,gBAAiBpB,EAAMiB,QAAQxB,QAAQoC,KACvC,UAAW,CACTT,gBAAiBpB,EAAMiB,QAAQxB,QAAQqC,KAEvC,uBAAwB,CACtBV,gBAAiBpB,EAAMiB,QAAQxB,QAAQoC,QAM7CnC,UAAW,CACTtB,MAAO4B,EAAMiB,QAAQvB,UAAUkC,aAC/BR,gBAAiBpB,EAAMiB,QAAQvB,UAAUmC,KACzC,UAAW,CACTT,gBAAiBpB,EAAMiB,QAAQvB,UAAUoC,KAEzC,uBAAwB,CACtBV,gBAAiBpB,EAAMiB,QAAQvB,UAAUmC,QAM/CvC,SAAU,CACRoB,aAAc,GACdC,QAAS,SACTE,MAAO,OACPT,UAAW,OACXQ,SAAU,GACVE,OAAQ,GACR,cAAe,CACbD,MAAO,OACPF,QAAS,QACTD,aAAc,GACdE,SAAU,GACVE,OAAQ,IAEV,eAAgB,CACdD,MAAO,OACPF,QAAS,SACTD,aAAc,GACdE,SAAU,GACVE,OAAQ,KAKZjB,aAAc,GAGdrB,SAAU,GAGVmB,aAAc,CACZvB,MAAO,WAIT2D,UAAW,CACTlB,MAAO,GACPC,OAAQ,IAIVkB,WAAY,CACVnB,MAAO,GACPC,OAAQ,OAgHoB,CAChCmB,KAAM,UADOlC,CAEZnC,I,wKC6FYsE,UA1UI,WACf,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAAmB,SAACC,GACtB,IADgC,EAC5BP,EAAQO,EAAMC,OAAOR,MACrBS,EAAO,GAFqB,cAITT,GAJS,IAIhC,2BAA8B,CAAC,IAApBU,EAAmB,QAC1BD,EAAKE,KAAK,CACNC,KAAMF,EACNG,WAAW,EACXC,OAAO,EACPC,SAAU,KATc,8BAYhCd,EAASQ,IAiGTO,GAAahB,EAAMiB,OAEvB,OACI,yBAAKnF,UAAU,uBACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CACIoF,cAAe,CACX,CAAErB,KAAM,SAAUsB,KAAM,KACxB,CAAEtB,KAAM,cAIpB,kBAAC,IAAD,CAAYuB,MAAM,eACd,yBAAKtF,UAAU,uBACX,2BAAOuF,QAAQ,sBACX,kBAAC,IAAD,CACIvF,UAAU,aACVE,MAAM,UACNE,UAAU,OACVS,QAAQ,YAER,yBAAKb,UAAU,qBACX,kBAAC,IAAD,CAAMA,UAAU,QAAhB,gBACA,gDAIZ,2BACIA,UAAU,SACVwF,SAAUhB,EACViB,GAAG,qBACHC,KAAK,SAET,yBAAK1F,UAAU,SACf,2BAAOuF,QAAQ,wBACX,kBAAC,IAAD,CACIvF,UAAU,aACVE,MAAM,UACNE,UAAU,OACVS,QAAQ,YAER,yBAAKb,UAAU,qBACX,kBAAC,IAAD,CAAMA,UAAU,QAAhB,gBACA,kDAIZ,2BACIA,UAAU,SACVwF,SAAUhB,EACViB,GAAG,uBACHC,KAAK,OACLC,UAAQ,KAIhB,yBACI3F,UAAWkB,YACP,mFACAoD,GAEJsB,YAhIQ,SAACnB,GACrBF,EAAa,gBAgIDsB,WA5JO,SAACpB,GACpBA,EAAMqB,iBACNvB,EAAa,gBA2JDwB,OAxJG,SAACtB,GAChBA,EAAMqB,iBACNrB,EAAMuB,UAEN,IAJ0B,EAItB9B,EAAQO,EAAMwB,aAAa/B,MAC3BS,EAAO,GALe,cAOHT,GAPG,IAO1B,2BAA8B,CAAC,IAApBU,EAAmB,QAC1BD,EAAKE,KAAK,CACNC,KAAMF,EACNG,WAAW,EACXC,OAAO,EACPC,SAAU,KAZQ,8BAmB1B,OAHAV,EAAa,IACbJ,EAASQ,IAEF,IAuIMO,EACG,sDAEA,wBAAIlF,UAAU,OACTkE,EAAMiB,OADX,QACwBjB,EAAMiB,OAAS,EAAI,IAAM,GAAI,IADrD,gBAOR,kBAAC,IAAD,CAAMnF,UAAU,OAAOkG,UAAW,GAC9B,yBAAKlG,UAAU,OACX,kBAAC,IAAD,CACImG,WAAS,EACTC,QAAS,EACTC,QAAQ,SACR7C,WAAW,SACX8C,UAAU,OAEV,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,QAGA,kBAAC,IAAD,CAAMF,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,QAGA,kBAAC,IAAD,CAAMF,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,YAGA,kBAAC,IAAD,CAAMF,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,UAGA,kBAAC,IAAD,CAAMF,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,aAKR,kBAAC,IAAD,MAECvB,GAAW,uBAAGlF,UAAU,QAAb,gBAEXkE,EAAMwC,KAAI,SAACH,EAAMI,GACd,IAAM7B,EAAqCyB,EAArCzB,KAAMC,EAA+BwB,EAA/BxB,UAAWC,EAAoBuB,EAApBvB,MAAOC,EAAasB,EAAbtB,SAC9B,OACI,yBAAKjF,UAAU,YAAY4G,IAAK9B,EAAKf,MACjC,kBAAC,IAAD,CACIoC,WAAS,EACTC,QAAS,EACTC,QAAQ,SACR7C,WAAW,SACX8C,UAAU,OAEV,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGI,GAAI,GAAIC,GAAI,IAChChC,EAAKf,MAEV,kBAAC,IAAD,CAAMwC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGI,GAAI,GAAIC,GAAI,KAC/BhC,EAAKnE,KAAO,KAAO,MAAMoG,QAAQ,GAAI,IAD3C,MAIA,kBAAC,IAAD,CAAMR,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGI,GAAI,GAAIC,GAAI,IACjC,kBAAC,IAAD,CACIE,MAAO/B,KAGf,kBAAC,IAAD,CAAMsB,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGI,GAAI,GAAIC,GAAI,IAChC9B,GACG,kBAAC,IAAD,CAAM9E,MAAM,SAAZ,UAIR,kBAAC,IAAD,CAAMqG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGI,GAAI,GAAIC,GAAI,IACjC,6BACI,kBAAC,IAAD,CACInG,KAAK,QACLE,QAAQ,YACRX,MAAM,UACNI,SAAUyE,EACVkC,QAAS,kBAjM5B,SAACN,GACtB,IAAIO,EAAQ,YAAOhD,GACfY,EAAOZ,EAAMyC,GAEjBO,EAASP,GAAT,2BAAuB7B,GAAvB,IAA6BC,WAAW,EAAMC,OAAO,IAErDb,EAAS,YAAI+C,IA4L+BC,CAAiBR,KANzB,UAWA,kBAAC,IAAD,CACI3G,UAAU,OACVW,KAAK,QACLE,QAAQ,YACRP,UAAWyE,EACX7E,MAAM,YACN+G,QAAS,kBAnL1B,SAACN,GACxB,IAAIO,EAAQ,YAAOhD,GACfY,EAAOZ,EAAMyC,GAEjBO,EAASP,GAAT,2BAAuB7B,GAAvB,IAA6BC,WAAW,EAAOC,OAAO,IAEtDb,EAAS,YAAI+C,IA8K+BE,CAAmBT,KAP3B,UAYA,kBAAC,IAAD,CACI9F,QAAQ,YACRF,KAAK,QACLX,UAAU,WACViH,QAAS,kBAlO1B,SAACN,GACxB,IAAIU,EAAQ,YAAOnD,GACnBmD,EAASC,OAAOX,EAAO,GACvBxC,EAAS,YAAIkD,IAgO+BE,CAAmBZ,KAL3B,kBAkB5B,6BACI,uBAAG3G,UAAU,OAAb,mBACA,yBAAKA,UAAU,QACX,kBAAC,IAAD,CAAiBgH,MAAO5C,KAE5B,yBAAKpE,UAAU,QACX,kBAAC,IAAD,CACIa,QAAQ,YACRX,MAAM,UACNI,SAAU4E,EACV+B,QAtOF,WAClB,IAAIC,EAAW,GAEfhD,EAAMwC,KAAI,SAACH,GAOP,OANAW,EAASrC,KAAT,2BACO0B,GADP,IAEIxB,WAAW,EACXC,OAAO,KAGJuB,KAGXpC,EAAS,GAAD,OAAK+C,IACb7C,EAAe,MAoNC,cAQA,kBAAC,IAAD,CACIrE,UAAU,OACVa,QAAQ,YACRX,MAAM,YACNI,SAAU4E,EACV+B,QArNA,WACpB,IAAIC,EAAW,GAEfhD,EAAMwC,KAAI,SAACH,GAOP,OANAW,EAASrC,KAAT,2BACO0B,GADP,IAEIxB,WAAW,EACXC,OAAO,KAGJuB,KAGXpC,EAAS,GAAD,OAAK+C,IACb7C,EAAe,KAkMC,eASEa,GACE,kBAAC,IAAD,CACIrE,QAAQ,YACRb,UAAU,WACViH,QArQJ,WACpB9C,EAAS,IACTE,EAAe,KAgQK","file":"static/js/30.28188921.chunk.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minHeight: 36,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      borderRadius: '50%',\n      padding: 0,\n      minWidth: 0,\n      width: 56,\n      height: 56,\n      boxShadow: theme.shadows[6],\n      '&:active': {\n        boxShadow: theme.shadows[12]\n      },\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        },\n        textDecoration: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // assure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    primary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    secondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"extended\"`. */\n    extended: {\n      borderRadius: 48 / 2,\n      padding: '0 16px',\n      width: 'auto',\n      minHeight: 'auto',\n      minWidth: 48,\n      height: 48,\n      '&$sizeSmall': {\n        width: 'auto',\n        padding: '0 8px',\n        borderRadius: 34 / 2,\n        minWidth: 34,\n        height: 34\n      },\n      '&$sizeMedium': {\n        width: 'auto',\n        padding: '0 16px',\n        borderRadius: 40 / 2,\n        minWidth: 40,\n        height: 40\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"``. */\n    sizeSmall: {\n      width: 40,\n      height: 40\n    },\n\n    /* Styles applied to the root element if `size=\"medium\"``. */\n    sizeMedium: {\n      width: 48,\n      height: 48\n    }\n  };\n};\nvar Fab = /*#__PURE__*/React.forwardRef(function Fab(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'large' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'round' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"size\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, variant !== \"round\" && classes.extended, size !== 'large' && classes[\"size\".concat(capitalize(size))], disabled && classes.disabled, {\n      'primary': classes.primary,\n      'secondary': classes.secondary,\n      'inherit': classes.colorInherit\n    }[color]),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Fab.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['extended', 'round'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFab'\n})(Fab);","import React, { useState } from 'react'\r\nimport { Breadcrumb, SimpleCard, MatxProgressBar } from 'app/components'\r\nimport { Fab, Icon, Card, Grid, Divider, Button } from '@material-ui/core'\r\nimport clsx from 'clsx'\r\n\r\nconst UploadForm = () => {\r\n    const [files, setFiles] = useState([])\r\n    const [queProgress, setQueProgress] = useState(0)\r\n    const [dargClass, setDragClass] = useState('')\r\n\r\n    const handleFileSelect = (event) => {\r\n        let files = event.target.files\r\n        let list = []\r\n\r\n        for (const iterator of files) {\r\n            list.push({\r\n                file: iterator,\r\n                uploading: false,\r\n                error: false,\r\n                progress: 0,\r\n            })\r\n        }\r\n        setFiles(list)\r\n    }\r\n\r\n    const handleDragOver = (event) => {\r\n        event.preventDefault()\r\n        setDragClass('drag-shadow')\r\n    }\r\n\r\n    const handleDrop = (event) => {\r\n        event.preventDefault()\r\n        event.persist()\r\n\r\n        let files = event.dataTransfer.files\r\n        let list = []\r\n\r\n        for (const iterator of files) {\r\n            list.push({\r\n                file: iterator,\r\n                uploading: false,\r\n                error: false,\r\n                progress: 0,\r\n            })\r\n        }\r\n\r\n        setDragClass('')\r\n        setFiles(list)\r\n\r\n        return false\r\n    }\r\n\r\n    const handleDragStart = (event) => {\r\n        setDragClass('drag-shadow')\r\n    }\r\n\r\n    const handleSingleRemove = (index) => {\r\n        let tempList = [...files]\r\n        tempList.splice(index, 1)\r\n        setFiles([...tempList])\r\n    }\r\n\r\n    const handleAllRemove = () => {\r\n        setFiles([])\r\n        setQueProgress(0)\r\n    }\r\n\r\n    const uploadSingleFile = (index) => {\r\n        let allFiles = [...files]\r\n        let file = files[index]\r\n\r\n        allFiles[index] = { ...file, uploading: true, error: false }\r\n\r\n        setFiles([...allFiles])\r\n    }\r\n\r\n    const uploadAllFile = () => {\r\n        let allFiles = []\r\n\r\n        files.map((item) => {\r\n            allFiles.push({\r\n                ...item,\r\n                uploading: true,\r\n                error: false,\r\n            })\r\n\r\n            return item\r\n        })\r\n\r\n        setFiles([...allFiles])\r\n        setQueProgress(35)\r\n    }\r\n\r\n    const handleSingleCancel = (index) => {\r\n        let allFiles = [...files]\r\n        let file = files[index]\r\n\r\n        allFiles[index] = { ...file, uploading: false, error: true }\r\n\r\n        setFiles([...allFiles])\r\n    }\r\n\r\n    const handleCancelAll = () => {\r\n        let allFiles = []\r\n\r\n        files.map((item) => {\r\n            allFiles.push({\r\n                ...item,\r\n                uploading: false,\r\n                error: true,\r\n            })\r\n\r\n            return item\r\n        })\r\n\r\n        setFiles([...allFiles])\r\n        setQueProgress(0)\r\n    }\r\n\r\n    let isEmpty = !!!files.length\r\n\r\n    return (\r\n        <div className=\"upload-form m-sm-30\">\r\n            <div className=\"mb-sm-30\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Others', path: '/' },\r\n                        { name: 'Upload' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <SimpleCard title=\"File Upload\">\r\n                <div className=\"flex flex-wrap mb-6\">\r\n                    <label htmlFor=\"upload-single-file\">\r\n                        <Fab\r\n                            className=\"capitalize\"\r\n                            color=\"primary\"\r\n                            component=\"span\"\r\n                            variant=\"extended\"\r\n                        >\r\n                            <div className=\"flex items-center\">\r\n                                <Icon className=\"pr-8\">cloud_upload</Icon>\r\n                                <span>Single File</span>\r\n                            </div>\r\n                        </Fab>\r\n                    </label>\r\n                    <input\r\n                        className=\"hidden\"\r\n                        onChange={handleFileSelect}\r\n                        id=\"upload-single-file\"\r\n                        type=\"file\"\r\n                    />\r\n                    <div className=\"px-4\"></div>\r\n                    <label htmlFor=\"upload-multiple-file\">\r\n                        <Fab\r\n                            className=\"capitalize\"\r\n                            color=\"primary\"\r\n                            component=\"span\"\r\n                            variant=\"extended\"\r\n                        >\r\n                            <div className=\"flex items-center\">\r\n                                <Icon className=\"pr-8\">cloud_upload</Icon>\r\n                                <span>Multiple File</span>\r\n                            </div>\r\n                        </Fab>\r\n                    </label>\r\n                    <input\r\n                        className=\"hidden\"\r\n                        onChange={handleFileSelect}\r\n                        id=\"upload-multiple-file\"\r\n                        type=\"file\"\r\n                        multiple\r\n                    />\r\n                </div>\r\n\r\n                <div\r\n                    className={clsx(\r\n                        'h-200 w-full border-radius-4 bg-light-gray mb-6 flex justify-center items-center',\r\n                        dargClass\r\n                    )}\r\n                    onDragEnter={handleDragStart}\r\n                    onDragOver={handleDragOver}\r\n                    onDrop={handleDrop}\r\n                >\r\n                    {isEmpty ? (\r\n                        <span>Drop your files here</span>\r\n                    ) : (\r\n                        <h5 className=\"m-0\">\r\n                            {files.length} file{files.length > 1 ? 's' : ''}{' '}\r\n                            selected...\r\n                        </h5>\r\n                    )}\r\n                </div>\r\n\r\n                <Card className=\"mb-6\" elevation={2}>\r\n                    <div className=\"p-4\">\r\n                        <Grid\r\n                            container\r\n                            spacing={2}\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                            direction=\"row\"\r\n                        >\r\n                            <Grid item lg={4} md={4}>\r\n                                Name\r\n                            </Grid>\r\n                            <Grid item lg={1} md={1}>\r\n                                Size\r\n                            </Grid>\r\n                            <Grid item lg={2} md={2}>\r\n                                Progress\r\n                            </Grid>\r\n                            <Grid item lg={1} md={1}>\r\n                                Status\r\n                            </Grid>\r\n                            <Grid item lg={4} md={4}>\r\n                                Actions\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                    <Divider></Divider>\r\n\r\n                    {isEmpty && <p className=\"px-4\">Que is empty</p>}\r\n\r\n                    {files.map((item, index) => {\r\n                        let { file, uploading, error, progress } = item\r\n                        return (\r\n                            <div className=\"px-4 py-4\" key={file.name}>\r\n                                <Grid\r\n                                    container\r\n                                    spacing={2}\r\n                                    justify=\"center\"\r\n                                    alignItems=\"center\"\r\n                                    direction=\"row\"\r\n                                >\r\n                                    <Grid item lg={4} md={4} sm={12} xs={12}>\r\n                                        {file.name}\r\n                                    </Grid>\r\n                                    <Grid item lg={1} md={1} sm={12} xs={12}>\r\n                                        {(file.size / 1024 / 1024).toFixed(1)}{' '}\r\n                                        MB\r\n                                    </Grid>\r\n                                    <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                                        <MatxProgressBar\r\n                                            value={progress}\r\n                                        ></MatxProgressBar>\r\n                                    </Grid>\r\n                                    <Grid item lg={1} md={1} sm={12} xs={12}>\r\n                                        {error && (\r\n                                            <Icon color=\"error\">error</Icon>\r\n                                        )}\r\n                                        {/* {uploading && <Icon className=\"text-green\">done</Icon>} */}\r\n                                    </Grid>\r\n                                    <Grid item lg={4} md={4} sm={12} xs={12}>\r\n                                        <div>\r\n                                            <Button\r\n                                                size=\"small\"\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                disabled={uploading}\r\n                                                onClick={() =>\r\n                                                    uploadSingleFile(index)\r\n                                                }\r\n                                            >\r\n                                                Upload\r\n                                            </Button>\r\n                                            <Button\r\n                                                className=\"mx-2\"\r\n                                                size=\"small\"\r\n                                                variant=\"contained\"\r\n                                                disabled={!uploading}\r\n                                                color=\"secondary\"\r\n                                                onClick={() =>\r\n                                                    handleSingleCancel(index)\r\n                                                }\r\n                                            >\r\n                                                Cancel\r\n                                            </Button>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                size=\"small\"\r\n                                                className=\"bg-error\"\r\n                                                onClick={() =>\r\n                                                    handleSingleRemove(index)\r\n                                                }\r\n                                            >\r\n                                                Remove\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </Card>\r\n\r\n                <div>\r\n                    <p className=\"m-0\">Queue progress:</p>\r\n                    <div className=\"py-4\">\r\n                        <MatxProgressBar value={queProgress}></MatxProgressBar>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={isEmpty}\r\n                            onClick={uploadAllFile}\r\n                        >\r\n                            Upload All\r\n                        </Button>\r\n                        <Button\r\n                            className=\"mx-2\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            disabled={isEmpty}\r\n                            onClick={handleCancelAll}\r\n                        >\r\n                            Cancel All\r\n                        </Button>\r\n                        {!isEmpty && (\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                className=\"bg-error\"\r\n                                onClick={handleAllRemove}\r\n                            >\r\n                                Remove All\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </SimpleCard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadForm\r\n"],"sourceRoot":""}