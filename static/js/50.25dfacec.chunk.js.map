{"version":3,"sources":["app/views/material-kit/snackbar/SimpleSnackbar.jsx","app/views/material-kit/snackbar/CustomizedSnackbar.jsx","app/views/material-kit/snackbar/PositionedSnackbar.jsx","app/views/material-kit/snackbar/LongLengthSnackbar.jsx","app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx","app/views/material-kit/snackbar/DirectionSnackbar.jsx","app/views/material-kit/snackbar/StackedSnackbar.jsx","app/views/material-kit/snackbar/TransitionSnackbar.jsx","app/views/material-kit/snackbar/AppSnackbar.jsx"],"names":["useStyles","makeStyles","theme","close","padding","spacing","SimpleSnackbar","classes","React","useState","open","setOpen","handleClose","event","reason","Button","onClick","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","id","action","key","color","size","IconButton","aria-label","className","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","display","alignItems","MySnackbarContentWrapper","props","variant","other","Icon","SnackbarContent","clsx","aria-describedby","useStyles2","margin","CustomizedSnackbars","PositionedSnackbar","state","setState","handleClick","newState","root","maxWidth","snackbar","LongTextSnackbar","ConsecutiveSnackbars","queue","push","Date","getTime","processQueue","length","messageInfo","shift","handleExited","this","onExited","Component","withStyles","TransitionLeft","Slide","direction","TransitionUp","TransitionRight","TransitionDown","DirectionSnackbar","Transition","TransitionComponent","StackedSnackbar","enqueueSnackbar","useSnackbar","Fragment","IntegrationNotistack","maxSnack","SlideTransition","GrowTransition","Grow","TransitionsSnackbar","Fade","AppSnackbar","routeSegments","name","path","title","ConsecutiveSnackbar"],"mappings":"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","file":"static/js/50.25dfacec.chunk.js","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    close: {\r\n        padding: theme.spacing(0.5),\r\n    },\r\n}))\r\n\r\nexport default function SimpleSnackbar() {\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleClick() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={handleClick}>Open simple snackbar</Button>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">Note archived</span>}\r\n                action={[\r\n                    <Button\r\n                        key=\"undo\"\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                        onClick={handleClose}\r\n                    >\r\n                        UNDO\r\n                    </Button>,\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={classes.close}\r\n                        onClick={handleClose}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>,\r\n                ]}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport Button from '@material-ui/core/Button'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport ErrorIcon from '@material-ui/icons/Error'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { amber, green } from '@material-ui/core/colors'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n}\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n}))\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles1()\r\n    const { className, message, onClose, variant, ...other } = props\r\n    const Icon = variantIcon[variant]\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    )\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info'])\r\n        .isRequired,\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nexport default function CustomizedSnackbars() {\r\n    const classes = useStyles2()\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleClick() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                className={classes.margin}\r\n                onClick={handleClick}\r\n            >\r\n                Open success snackbar\r\n            </Button>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n            >\r\n                <MySnackbarContentWrapper\r\n                    onClose={handleClose}\r\n                    variant=\"success\"\r\n                    message=\"This is a success message!\"\r\n                />\r\n            </Snackbar>\r\n            <MySnackbarContentWrapper\r\n                variant=\"error\"\r\n                className={classes.margin}\r\n                message=\"This is an error message!\"\r\n            />\r\n            <MySnackbarContentWrapper\r\n                variant=\"warning\"\r\n                className={classes.margin}\r\n                message=\"This is a warning message!\"\r\n            />\r\n            <MySnackbarContentWrapper\r\n                variant=\"info\"\r\n                className={classes.margin}\r\n                message=\"This is an information message!\"\r\n            />\r\n            <MySnackbarContentWrapper\r\n                variant=\"success\"\r\n                className={classes.margin}\r\n                message=\"This is a success message!\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\n\r\nexport default function PositionedSnackbar() {\r\n    const [state, setState] = React.useState({\r\n        open: false,\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n    })\r\n\r\n    const { vertical, horizontal, open } = state\r\n\r\n    const handleClick = (newState) => () => {\r\n        setState({ open: true, ...newState })\r\n    }\r\n\r\n    function handleClose() {\r\n        setState({ ...state, open: false })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                onClick={handleClick({ vertical: 'top', horizontal: 'center' })}\r\n            >\r\n                Top-Center\r\n            </Button>\r\n            <Button\r\n                onClick={handleClick({ vertical: 'top', horizontal: 'right' })}\r\n            >\r\n                Top-Right\r\n            </Button>\r\n            <Button\r\n                onClick={handleClick({\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                })}\r\n            >\r\n                Bottom-Right\r\n            </Button>\r\n            <Button\r\n                onClick={handleClick({\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                })}\r\n            >\r\n                Bottom-Center\r\n            </Button>\r\n            <Button\r\n                onClick={handleClick({\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                })}\r\n            >\r\n                Bottom-Left\r\n            </Button>\r\n            <Button\r\n                onClick={handleClick({ vertical: 'top', horizontal: 'left' })}\r\n            >\r\n                Top-Left\r\n            </Button>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                key={`${vertical},${horizontal}`}\r\n                open={open}\r\n                onClose={handleClose}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">I love snacks</span>}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\r\n\r\nconst action = (\r\n    <Button color=\"secondary\" size=\"small\">\r\n        lorem ipsum dolorem\r\n    </Button>\r\n)\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 600,\r\n    },\r\n    snackbar: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nexport default function LongTextSnackbar() {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <SnackbarContent\r\n                className={classes.snackbar}\r\n                message=\"I love snacks.\"\r\n                action={action}\r\n            />\r\n            <SnackbarContent\r\n                className={classes.snackbar}\r\n                message={`I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.`}\r\n            />\r\n            <SnackbarContent\r\n                className={classes.snackbar}\r\n                message=\"I love candy. I love cookies. I love cupcakes.\"\r\n                action={action}\r\n            />\r\n            <SnackbarContent\r\n                className={classes.snackbar}\r\n                message={\r\n                    'I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.'\r\n                }\r\n                action={action}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst styles = (theme) => ({\r\n    close: {\r\n        padding: theme.spacing(0.5),\r\n    },\r\n})\r\n\r\nclass ConsecutiveSnackbars extends React.Component {\r\n    queue = []\r\n\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    handleClick = (message) => () => {\r\n        this.queue.push({\r\n            message,\r\n            key: new Date().getTime(),\r\n        })\r\n\r\n        if (this.state.open) {\r\n            // immediately begin dismissing current message\r\n            // to start showing new one\r\n            this.setState({ open: false })\r\n        } else {\r\n            this.processQueue()\r\n        }\r\n    }\r\n\r\n    processQueue = () => {\r\n        if (this.queue.length > 0) {\r\n            this.setState({\r\n                messageInfo: this.queue.shift(),\r\n                open: true,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    handleExited = () => {\r\n        this.processQueue()\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        const { messageInfo = {} } = this.state\r\n\r\n        return (\r\n            <div>\r\n                <Button onClick={this.handleClick('Message A')}>\r\n                    Show message A\r\n                </Button>\r\n                <Button onClick={this.handleClick('Message B')}>\r\n                    Show message B\r\n                </Button>\r\n                <Snackbar\r\n                    key={messageInfo.key}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={this.state.open}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleClose}\r\n                    onExited={this.handleExited}\r\n                    ContentProps={{\r\n                        'aria-describedby': 'message-id',\r\n                    }}\r\n                    message={<span id=\"message-id\">{messageInfo.message}</span>}\r\n                    action={[\r\n                        <Button\r\n                            key=\"undo\"\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            onClick={this.handleClose}\r\n                        >\r\n                            UNDO\r\n                        </Button>,\r\n                        <IconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            className={classes.close}\r\n                            onClick={this.handleClose}\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nConsecutiveSnackbars.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(ConsecutiveSnackbars)\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Slide from '@material-ui/core/Slide'\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"left\" />\r\n}\r\n\r\nfunction TransitionUp(props) {\r\n    return <Slide {...props} direction=\"up\" />\r\n}\r\n\r\nfunction TransitionRight(props) {\r\n    return <Slide {...props} direction=\"right\" />\r\n}\r\n\r\nfunction TransitionDown(props) {\r\n    return <Slide {...props} direction=\"down\" />\r\n}\r\n\r\nclass DirectionSnackbar extends React.Component {\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    handleClick = (Transition) => () => {\r\n        this.setState({ open: true, Transition })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button onClick={this.handleClick(TransitionLeft)}>\r\n                    Right\r\n                </Button>\r\n                <Button onClick={this.handleClick(TransitionUp)}>Up</Button>\r\n                <Button onClick={this.handleClick(TransitionRight)}>\r\n                    Left\r\n                </Button>\r\n                <Button onClick={this.handleClick(TransitionDown)}>Down</Button>\r\n                <Snackbar\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    TransitionComponent={this.state.Transition}\r\n                    ContentProps={{\r\n                        'aria-describedby': 'message-id',\r\n                    }}\r\n                    message={<span id=\"message-id\">I love snacks</span>}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DirectionSnackbar\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport { SnackbarProvider, useSnackbar } from 'notistack'\r\n\r\nfunction StackedSnackbar() {\r\n    const { enqueueSnackbar } = useSnackbar()\r\n\r\n    const handleClick = () => {\r\n        enqueueSnackbar('I love snacks.')\r\n    }\r\n\r\n    const handleClickVariant = (variant) => () => {\r\n        // variant could be success, error, warning, info, or default\r\n        enqueueSnackbar('This is a warning message!', { variant })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button onClick={handleClick}>Show snackbar</Button>\r\n            <Button onClick={handleClickVariant('warning')}>\r\n                Show warning snackbar\r\n            </Button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default function IntegrationNotistack() {\r\n    return (\r\n        <SnackbarProvider maxSnack={3}>\r\n            <StackedSnackbar />\r\n        </SnackbarProvider>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Fade from '@material-ui/core/Fade'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport Grow from '@material-ui/core/Grow'\r\n\r\nfunction SlideTransition(props) {\r\n    return <Slide {...props} direction=\"up\" />\r\n}\r\n\r\nfunction GrowTransition(props) {\r\n    return <Grow {...props} />\r\n}\r\n\r\nexport default function TransitionsSnackbar() {\r\n    const [state, setState] = React.useState({\r\n        open: false,\r\n        Transition: Fade,\r\n    })\r\n\r\n    const handleClick = (Transition) => () => {\r\n        setState({\r\n            open: true,\r\n            Transition,\r\n        })\r\n    }\r\n\r\n    function handleClose() {\r\n        setState({\r\n            ...state,\r\n            open: false,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={handleClick(GrowTransition)}>\r\n                Grow Transition\r\n            </Button>\r\n            <Button onClick={handleClick(Fade)}>Fade Transition</Button>\r\n            <Button onClick={handleClick(SlideTransition)}>\r\n                Slide Transition\r\n            </Button>\r\n            <Snackbar\r\n                open={state.open}\r\n                onClose={handleClose}\r\n                TransitionComponent={state.Transition}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">I love snacks</span>}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Breadcrumb, SimpleCard } from 'app/components'\r\nimport SimpleSnackbar from './SimpleSnackbar'\r\nimport CustomizedSnackbars from './CustomizedSnackbar'\r\nimport PositionedSnackbar from './PositionedSnackbar'\r\nimport LongTextSnackbar from './LongLengthSnackbar'\r\nimport ConsecutiveSnackbar from './ConsecutiveSnackbar'\r\nimport DirectionSnackbar from './DirectionSnackbar'\r\nimport IntegrationNotistack from './StackedSnackbar'\r\nimport TransitionsSnackbar from './TransitionSnackbar'\r\n\r\nconst AppSnackbar = () => {\r\n    return (\r\n        <div className=\"m-sm-30\">\r\n            <div className=\"mb-sm-30\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Material', path: '/material' },\r\n                        { name: 'Snackbar' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <SimpleCard title=\"simple snackbar\">\r\n                <SimpleSnackbar />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"customized snackbar\">\r\n                <CustomizedSnackbars />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"positioned snackbar\">\r\n                <PositionedSnackbar />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"message length\">\r\n                <LongTextSnackbar />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"transition\">\r\n                <TransitionsSnackbar />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"consecutive snackbar\">\r\n                <ConsecutiveSnackbar />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"Control Slide direction\">\r\n                <DirectionSnackbar />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"complementary project\">\r\n                <IntegrationNotistack />\r\n            </SimpleCard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppSnackbar\r\n"],"sourceRoot":""}