{"version":3,"sources":["app/views/map/MarkerMap.jsx","app/views/geolocation/Analytics.jsx"],"names":["MyMapComponent","compose","withProps","googleMapURL","loadingElement","className","containerElement","mapElement","withScriptjs","withGoogleMap","defaultCenter","position","displayText","onMarkerClick","defaultZoom","lat","lng","isMarkerShown","onClick","options","closeBoxURL","enableEventPropagation","MarkerMap","props","timer","useRef","useState","setIsMarkerShown","delayedShowMarker","useCallback","current","setTimeout","useEffect","clearTimeout","Analytics","geolocation","configuration","filteredgeolocation","filter","x","id","displayLocId","container","spacing","item","lg","md","sm","xs","loc"],"mappings":"8MAYMA,EAAiBC,kBACnBC,oBAAU,CACNC,aACI,oFACJC,eAAgB,yBAAKC,UAAU,WAC/BC,iBAAkB,yBAAKD,UAAU,UACjCE,WAAY,yBAAKF,UAAU,aAE/BG,eACAC,gBATmBR,EAUrB,gBAAES,EAAF,EAAEA,cAAeC,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,YAAaC,EAAxC,EAAwCA,cAAxC,OACE,kBAAC,YAAD,CAAWC,YAAa,EACxBJ,cAAe,CAAEK,KAAkB,OAAbL,QAAa,IAAbA,OAAA,EAAAA,EAAeK,OAAQ,OAAQC,KAAkB,OAAbN,QAAa,IAAbA,OAAA,EAAAA,EAAeM,MAAO,UAE5E,kBAAC,SAAD,CACIC,eAAe,EACfN,SAAU,CAAEI,KAAa,OAARJ,QAAQ,IAARA,OAAA,EAAAA,EAAUI,OAAQ,OAAQC,KAAa,OAARL,QAAQ,IAARA,OAAA,EAAAA,EAAUK,MAAO,SACjEE,QAASL,GAET,kBAAC,UAAD,CACIM,QAAS,CAAEC,YAAY,GAAKC,wBAAwB,IAEpD,kBAAC,IAAD,CAAMhB,UAAU,OACZ,uBAAGA,UAAU,sBAAsBO,GAAe,sBAsCvDU,IA/BG,SAACC,GACf,IAAMC,EAAQC,iBAAO,MACrB,EAA0CC,oBAAS,GAAnD,mBAAOT,EAAP,KAAsBU,EAAtB,KAEMC,EAAoBC,uBAAY,WAClCL,EAAMM,QAAUC,YAAW,WACvBJ,GAAiB,KAClB,OACJ,IAcH,OAPAK,qBAAU,WAEN,OADAJ,IACO,WACCJ,EAAMM,SAASG,aAAaT,EAAMM,YAE3C,CAACF,IAGA,kBAAC5B,EAAD,eACIiB,cAAeA,EACfJ,cAfkB,WACtBc,GAAiB,GACjBC,MAcQL,M,kCCpEhB,uDAgEeW,UA5CG,WAGd,IAAMC,EAAcC,IAAcD,YAE5BE,EAAsBF,EAAYG,QAAO,SAAAC,GAAC,OAAIA,EAAEC,KAAOL,EAAY,GAAGM,gBAAc,GAC1F,OAEI,kBAAC,WAAD,KACI,yBAAKpC,UAAU,0BACX,wBAAIA,UAAU,8BAAd,gBAmBA,kBAAC,IAAD,CAAMqC,WAAS,EAACC,QAAS,GACrB,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACnC,kBAAC,IAAD,CACItC,cAAe,CAAEK,IAAG,OAAEsB,QAAF,IAAEA,OAAF,EAAEA,EAAqBtB,IAAKC,IAAG,OAAEqB,QAAF,IAAEA,OAAF,EAAEA,EAAqBrB,KAC1EL,SAAU,CAAEI,IAAG,OAAEsB,QAAF,IAAEA,OAAF,EAAEA,EAAqBtB,IAAKC,IAAG,OAAEqB,QAAF,IAAEA,OAAF,EAAEA,EAAqBrB,KACrEJ,YAAW,OAAEyB,QAAF,IAAEA,OAAF,EAAEA,EAAqBY","file":"static/js/30.31c4c630.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react'\r\nimport { compose, withProps } from 'recompose'\r\nimport {\r\n    withScriptjs,\r\n    withGoogleMap,\r\n    GoogleMap,\r\n    Marker,\r\n} from 'react-google-maps'\r\n\r\nimport { InfoBox } from 'react-google-maps/lib/components/addons/InfoBox'\r\nimport { Card } from '@material-ui/core'\r\n\r\nconst MyMapComponent = compose(\r\n    withProps({\r\n        googleMapURL:\r\n            'https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places',\r\n        loadingElement: <div className=\"h-full\" />,\r\n        containerElement: <div className=\"h-400\" />,\r\n        mapElement: <div className=\"h-full\" />,\r\n    }),\r\n    withScriptjs,\r\n    withGoogleMap\r\n)(({defaultCenter, position, displayText, onMarkerClick}) => (\r\n    <GoogleMap defaultZoom={8}\r\n    defaultCenter={{ lat: defaultCenter?.lat || -34.397, lng: defaultCenter?.lng || 150.644 }}\r\n    >\r\n        <Marker\r\n            isMarkerShown={false}\r\n            position={{ lat: position?.lat || -34.397, lng: position?.lng || 150.644 }}\r\n            onClick={onMarkerClick}\r\n        >\r\n            <InfoBox\r\n                options={{ closeBoxURL: ``, enableEventPropagation: true }}\r\n            >\r\n                <Card className=\"p-4\">\r\n                    <p className=\"whitespace-pre m-0\">{displayText || 'Hello World'}</p>\r\n                </Card>\r\n            </InfoBox>\r\n        </Marker>\r\n    </GoogleMap>\r\n))\r\n\r\nconst MarkerMap = (props) => {\r\n    const timer = useRef(null)\r\n    const [isMarkerShown, setIsMarkerShown] = useState(false)\r\n\r\n    const delayedShowMarker = useCallback(() => {\r\n        timer.current = setTimeout(() => {\r\n            setIsMarkerShown(true)\r\n        }, 3000)\r\n    }, [])\r\n\r\n    const handleMarkerClick = () => {\r\n        setIsMarkerShown(false)\r\n        delayedShowMarker()\r\n    }\r\n\r\n    useEffect(() => {\r\n        delayedShowMarker()\r\n        return () => {\r\n            if (timer.current) clearTimeout(timer.current)\r\n        }\r\n    }, [delayedShowMarker])\r\n\r\n    return (\r\n        <MyMapComponent\r\n            isMarkerShown={isMarkerShown}\r\n            onMarkerClick={handleMarkerClick}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MarkerMap\r\n","import React, { Fragment } from 'react'\r\nimport { Grid, \r\n    // Card, \r\n    // Avatar\r\n } from '@material-ui/core'\r\n// import DoughnutChart from './shared/Doughnut'\r\n// import StatCards from './shared/StatCards'\r\n// import TopSellingTable from './shared/TopSellingTable'\r\n// import RowCards from './shared/RowCards'\r\n// import StatCards2 from './shared/StatCards2'\r\n// import UpgradeCard from './shared/UpgradeCard'\r\n// import Campaigns from './shared/Campaigns'\r\n\r\n\r\n// import { useTheme } from '@material-ui/styles'\r\n// import useAuth from 'app/hooks/useAuth'\r\n// import BasicMap from '../map/BasicMap'\r\nimport MarkerMap from '../map/MarkerMap'\r\nimport configuration from \"../../config/configuration\";\r\n\r\nconst Analytics = () => {\r\n    // const theme = useTheme()\r\n    // const { logout, user } = useAuth()\r\n    const geolocation = configuration.geolocation;\r\n\r\n    const filteredgeolocation = geolocation.filter(x => x.id === geolocation[0].displayLocId)[0];\r\n    return (\r\n\r\n        <Fragment>\r\n            <div className=\"analytics m-sm-30 mt-6\">\r\n                <h4 className=\"card-title text-muted mb-4\">\r\n                    Geo Location\r\n                </h4>\r\n                {/* <Grid container spacing={0}>\r\n                    <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                        <BasicMap></BasicMap>\r\n                    </Grid>\r\n                </Grid> */}\r\n\r\n                {/* <Grid container spacing={0}>\r\n                    <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                        <MarkerMap\r\n                            defaultCenter={{ lat: 19.171209, lng: 83.416323 }}\r\n                            position={{ lat: 19.171209, lng: 83.416323 }}\r\n                            displayText=\"Rayagada\"\r\n                        ></MarkerMap>                            \r\n                    </Grid>\r\n                </Grid> */}\r\n\r\n                <Grid container spacing={0}>\r\n                    <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                        <MarkerMap\r\n                            defaultCenter={{ lat: filteredgeolocation?.lat, lng: filteredgeolocation?.lng }}\r\n                            position={{ lat: filteredgeolocation?.lat, lng: filteredgeolocation?.lng }}\r\n                            displayText={filteredgeolocation?.loc}\r\n                        ></MarkerMap>                            \r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default Analytics\r\n"],"sourceRoot":""}