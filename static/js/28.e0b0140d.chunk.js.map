{"version":3,"sources":["../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","app/views/material-kit/switch/SijmpleSwitch.jsx","app/views/material-kit/switch/LabelledSwitch.jsx","app/views/material-kit/switch/FormGroupSwitch.jsx","../node_modules/@material-ui/core/esm/colors/purple.js","app/views/material-kit/switch/CustomizedSwitch.jsx","app/views/material-kit/switch/PlacingSwitchLabel.jsx","app/views/material-kit/switch/AppSwitch.jsx"],"names":["FormGroup","React","props","ref","classes","className","_props$row","row","other","_objectWithoutProperties","_extends","clsx","root","withStyles","display","flexDirection","flexWrap","name","Switch","_props$color","color","_props$edge","edge","_props$size","size","icon","thumb","edgeStart","edgeEnd","concat","capitalize","SwitchBase","type","checkedIcon","switchBase","input","checked","disabled","track","theme","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","marginLeft","marginRight","top","left","palette","grey","transition","transitions","create","duration","shortest","transform","opacity","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","SimpleSwitch","useState","checkedA","checkedB","state","setState","handleChange","event","target","onChange","value","inputProps","defaultChecked","LabelledSwitch","FormControlLabel","control","label","FormGroupSwitch","gilad","jason","antoine","FormControl","component","FormLabel","FormHelperText","purple","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","PurpleSwitch","IOSSwitch","margin","spacing","border","focusVisible","focusVisibleClassName","disableRipple","AntSwitch","borderColor","CustomizedSwitch","checkedC","Typography","Grid","container","alignItems","item","PlacingSwitchLabel","setValue","aria-label","labelPlacement","AppSwitch","routeSegments","path","title"],"mappings":"0IAAA,8CAyBIA,EAAyBC,cAAiB,SAAmBC,EAAOC,GACtE,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAaJ,EAAMK,IACnBA,OAAqB,IAAfD,GAAgCA,EACtCE,EAAQC,YAAyBP,EAAO,CAAC,UAAW,YAAa,QAErE,OAAoBD,gBAAoB,MAAOS,YAAS,CACtDL,UAAWM,YAAKP,EAAQQ,KAAMP,EAAWE,GAAOH,EAAQG,KACxDJ,IAAKA,GACJK,OA6BUK,gBA1DK,CAElBD,KAAM,CACJE,QAAS,OACTC,cAAe,SACfC,SAAU,QAIZT,IAAK,CACHQ,cAAe,QAgDe,CAChCE,KAAM,gBADOJ,CAEZb,I,kCClEH,uEAmKIkB,EAAsBjB,cAAiB,SAAgBC,EAAOC,GAChE,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBc,EAAejB,EAAMkB,MACrBA,OAAyB,IAAjBD,EAA0B,YAAcA,EAChDE,EAAcnB,EAAMoB,KACpBA,OAAuB,IAAhBD,GAAiCA,EACxCE,EAAcrB,EAAMsB,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3Cf,EAAQC,YAAyBP,EAAO,CAAC,UAAW,YAAa,QAAS,OAAQ,SAElFuB,EAAoBxB,gBAAoB,OAAQ,CAClDI,UAAWD,EAAQsB,QAErB,OAAoBzB,gBAAoB,OAAQ,CAC9CI,UAAWM,YAAKP,EAAQQ,KAAMP,EAAW,CACvC,MAASD,EAAQuB,UACjB,IAAOvB,EAAQwB,SACfN,GAAgB,UAATE,GAAoBpB,EAAQ,OAAOyB,OAAOC,YAAWN,OAChDvB,gBAAoB8B,IAAYrB,YAAS,CACvDsB,KAAM,WACNP,KAAMA,EACNQ,YAAaR,EACbrB,QAAS,CACPQ,KAAMD,YAAKP,EAAQ8B,WAAY9B,EAAQ,QAAQyB,OAAOC,YAAWV,MACjEe,MAAO/B,EAAQ+B,MACfC,QAAShC,EAAQgC,QACjBC,SAAUjC,EAAQiC,UAEpBlC,IAAKA,GACJK,IAAsBP,gBAAoB,OAAQ,CACnDI,UAAWD,EAAQkC,YAwGRzB,iBA/RK,SAAgB0B,GAClC,MAAO,CAEL3B,KAAM,CACJE,QAAS,cACT0B,MAAO,GACPC,OAAQ,GACRC,SAAU,SACVC,QAAS,GACTC,UAAW,aACXC,SAAU,WACVC,WAAY,EACZC,OAAQ,EAERC,cAAe,SAEf,eAAgB,CACdC,YAAa,UAKjBtB,UAAW,CACTuB,YAAa,GAIftB,QAAS,CACPuB,aAAc,GAIhBjB,WAAY,CACVW,SAAU,WACVO,IAAK,EACLC,KAAM,EACNN,OAAQ,EAER3B,MAA8B,UAAvBmB,EAAMe,QAAQtB,KAAmBO,EAAMe,QAAQC,KAAK,IAAMhB,EAAMe,QAAQC,KAAK,KACpFC,WAAYjB,EAAMkB,YAAYC,OAAO,CAAC,OAAQ,aAAc,CAC1DC,SAAUpB,EAAMkB,YAAYE,SAASC,WAEvC,YAAa,CACXC,UAAW,oBAEb,aAAc,CACZzC,MAA8B,UAAvBmB,EAAMe,QAAQtB,KAAmBO,EAAMe,QAAQC,KAAK,KAAOhB,EAAMe,QAAQC,KAAK,MAEvF,qBAAsB,CACpBO,QAAS,IAEX,sBAAuB,CACrBA,QAAgC,UAAvBvB,EAAMe,QAAQtB,KAAmB,IAAO,KAKrD+B,aAAc,CACZ,YAAa,CACX3C,MAAOmB,EAAMe,QAAQU,QAAQC,KAC7B,UAAW,CACTC,gBAAiBC,YAAK5B,EAAMe,QAAQU,QAAQC,KAAM1B,EAAMe,QAAQc,OAAOC,cACvE,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZ9C,MAA8B,UAAvBmB,EAAMe,QAAQtB,KAAmBO,EAAMe,QAAQC,KAAK,KAAOhB,EAAMe,QAAQC,KAAK,MAEvF,qBAAsB,CACpBW,gBAAiB3B,EAAMe,QAAQU,QAAQC,MAEzC,sBAAuB,CACrBC,gBAAwC,UAAvB3B,EAAMe,QAAQtB,KAAmBO,EAAMe,QAAQgB,OAAOC,MAAQhC,EAAMe,QAAQgB,OAAOE,QAKxGC,eAAgB,CACd,YAAa,CACXrD,MAAOmB,EAAMe,QAAQoB,UAAUT,KAC/B,UAAW,CACTC,gBAAiBC,YAAK5B,EAAMe,QAAQoB,UAAUT,KAAM1B,EAAMe,QAAQc,OAAOC,cACzE,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZ9C,MAA8B,UAAvBmB,EAAMe,QAAQtB,KAAmBO,EAAMe,QAAQC,KAAK,KAAOhB,EAAMe,QAAQC,KAAK,MAEvF,qBAAsB,CACpBW,gBAAiB3B,EAAMe,QAAQoB,UAAUT,MAE3C,sBAAuB,CACrBC,gBAAwC,UAAvB3B,EAAMe,QAAQtB,KAAmBO,EAAMe,QAAQgB,OAAOC,MAAQhC,EAAMe,QAAQgB,OAAOE,QAKxGG,UAAW,CACTnC,MAAO,GACPC,OAAQ,GACRE,QAAS,EACT,WAAY,CACVH,MAAO,GACPC,OAAQ,IAEV,gBAAiB,CACfE,QAAS,EACT,YAAa,CACXkB,UAAW,sBAMjBzB,QAAS,GAGTC,SAAU,GAGVF,MAAO,CACLkB,KAAM,QACNb,MAAO,QAITd,MAAO,CACLkD,UAAWrC,EAAMsC,QAAQ,GACzBX,gBAAiB,eACjB1B,MAAO,GACPC,OAAQ,GACRqC,aAAc,OAIhBxC,MAAO,CACLG,OAAQ,OACRD,MAAO,OACPsC,aAAc,EACd/B,QAAS,EACTS,WAAYjB,EAAMkB,YAAYC,OAAO,CAAC,UAAW,oBAAqB,CACpEC,SAAUpB,EAAMkB,YAAYE,SAASC,WAEvCM,gBAAwC,UAAvB3B,EAAMe,QAAQtB,KAAmBO,EAAMe,QAAQgB,OAAOC,MAAQhC,EAAMe,QAAQgB,OAAOE,MACpGV,QAAgC,UAAvBvB,EAAMe,QAAQtB,KAAmB,IAAO,OA2IrB,CAChCf,KAAM,aADOJ,CAEZK,I,8FCzSY,SAAS6D,IACpB,MAA0B9E,IAAM+E,SAAS,CACrCC,UAAU,EACVC,UAAU,IAFd,mBAAOC,EAAP,KAAcC,EAAd,KAKMC,EAAe,SAACpE,GAAD,OAAU,SAACqE,GAC5BF,EAAS,2BAAKD,GAAN,kBAAclE,EAAOqE,EAAMC,OAAOnD,aAG9C,OACI,6BACI,kBAAClB,EAAA,EAAD,CACIkB,QAAS+C,EAAMF,SACfO,SAAUH,EAAa,YACvBI,MAAM,WACNC,WAAY,CAAE,aAAc,wBAEhC,kBAACxE,EAAA,EAAD,CACIkB,QAAS+C,EAAMD,SACfM,SAAUH,EAAa,YACvBI,MAAM,WACNrE,MAAM,UACNsE,WAAY,CAAE,aAAc,sBAEhC,kBAACxE,EAAA,EAAD,CACIuE,MAAM,WACNC,WAAY,CAAE,aAAc,sBAEhC,kBAACxE,EAAA,EAAD,CACImB,UAAQ,EACRoD,MAAM,WACNC,WAAY,CAAE,aAAc,uBAEhC,kBAACxE,EAAA,EAAD,CACImB,UAAQ,EACRD,SAAO,EACPqD,MAAM,WACNC,WAAY,CAAE,aAAc,sBAEhC,kBAACxE,EAAA,EAAD,CACIyE,gBAAc,EACdF,MAAM,WACNrE,MAAM,UACNsE,WAAY,CAAE,aAAc,kC,wBC1C7B,SAASE,IACpB,MAA0B3F,IAAM+E,SAAS,CACrCC,UAAU,EACVC,UAAU,IAFd,mBAAOC,EAAP,KAAcC,EAAd,KAKMC,EAAe,SAACpE,GAAD,OAAU,SAACqE,GAC5BF,EAAS,2BAAKD,GAAN,kBAAclE,EAAOqE,EAAMC,OAAOnD,aAG9C,OACI,kBAACpC,EAAA,EAAD,CAAWO,KAAG,GACV,kBAACsF,EAAA,EAAD,CACIC,QACI,kBAAC5E,EAAA,EAAD,CACIkB,QAAS+C,EAAMF,SACfO,SAAUH,EAAa,YACvBI,MAAM,aAGdM,MAAM,cAEV,kBAACF,EAAA,EAAD,CACIC,QACI,kBAAC5E,EAAA,EAAD,CACIkB,QAAS+C,EAAMD,SACfM,SAAUH,EAAa,YACvBI,MAAM,WACNrE,MAAM,YAGd2E,MAAM,YAEV,kBAACF,EAAA,EAAD,CACIC,QAAS,kBAAC5E,EAAA,EAAD,CAAQuE,MAAM,aACvBM,MAAM,iBAEV,kBAACF,EAAA,EAAD,CACIxD,UAAQ,EACRyD,QAAS,kBAAC5E,EAAA,EAAD,CAAQuE,MAAM,aACvBM,MAAM,aAEV,kBAACF,EAAA,EAAD,CACIxD,UAAQ,EACRyD,QAAS,kBAAC5E,EAAA,EAAD,CAAQkB,SAAO,EAACqD,MAAM,aAC/BM,MAAM,c,kCC1CP,SAASC,IACpB,MAA0B/F,IAAM+E,SAAS,CACrCiB,OAAO,EACPC,OAAO,EACPC,SAAS,IAHb,mBAAOhB,EAAP,KAAcC,EAAd,KAMMC,EAAe,SAACpE,GAAD,OAAU,SAACqE,GAC5BF,EAAS,2BAAKD,GAAN,kBAAclE,EAAOqE,EAAMC,OAAOnD,aAG9C,OACI,kBAACgE,EAAA,EAAD,CAAaC,UAAU,YACnB,kBAACC,EAAA,EAAD,CAAWD,UAAU,UAArB,yBACA,kBAACrG,EAAA,EAAD,KACI,kBAAC6F,EAAA,EAAD,CACIC,QACI,kBAAC5E,EAAA,EAAD,CACIkB,QAAS+C,EAAMc,MACfT,SAAUH,EAAa,SACvBI,MAAM,UAGdM,MAAM,eAEV,kBAACF,EAAA,EAAD,CACIC,QACI,kBAAC5E,EAAA,EAAD,CACIkB,QAAS+C,EAAMe,MACfV,SAAUH,EAAa,SACvBI,MAAM,UAGdM,MAAM,kBAEV,kBAACF,EAAA,EAAD,CACIC,QACI,kBAAC5E,EAAA,EAAD,CACIkB,QAAS+C,EAAMgB,QACfX,SAAUH,EAAa,WACvBI,MAAM,YAGdM,MAAM,oBAGd,kBAACQ,EAAA,EAAD,oB,mBCtCGC,EAhBF,CACXC,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,W,kCCLFC,EAAe1G,YAAW,CAC5BqB,WAAY,CACRd,MAAOoF,EAAO,KACd,YAAa,CACTpF,MAAOoF,EAAO,MAElB,qBAAsB,CAClBtC,gBAAiBsC,EAAO,OAGhCpE,QAAS,GACTE,MAAO,IAXUzB,CAYlBK,KAEGsG,EAAY3G,aAAW,SAAC0B,GAAD,MAAY,CACrC3B,KAAM,CACF4B,MAAO,GACPC,OAAQ,GACRE,QAAS,EACT8E,OAAQlF,EAAMmF,QAAQ,IAE1BxF,WAAY,CACRS,QAAS,EACT,YAAa,CACTkB,UAAW,mBACXzC,MAAOmB,EAAMe,QAAQgB,OAAOE,MAC5B,aAAc,CACVN,gBAAiB,UACjBJ,QAAS,EACT6D,OAAQ,SAGhB,wBAAyB,CACrBvG,MAAO,UACPuG,OAAQ,mBAGhBjG,MAAO,CACHc,MAAO,GACPC,OAAQ,IAEZH,MAAO,CACHwC,aAAc,GACd6C,OAAO,aAAD,OAAepF,EAAMe,QAAQC,KAAK,MACxCW,gBAAiB3B,EAAMe,QAAQC,KAAK,IACpCO,QAAS,EACTN,WAAYjB,EAAMkB,YAAYC,OAAO,CAAC,mBAAoB,YAE9DtB,QAAS,GACTwF,aAAc,MAnCA/G,EAoCd,YAA4B,IAAzBT,EAAwB,EAAxBA,QAAYF,EAAY,iBAC3B,OACI,kBAACgB,EAAA,EAAD,eACI2G,sBAAuBzH,EAAQwH,aAC/BE,eAAa,EACb1H,QAAS,CACLQ,KAAMR,EAAQQ,KACdsB,WAAY9B,EAAQ8B,WACpBR,MAAOtB,EAAQsB,MACfY,MAAOlC,EAAQkC,MACfF,QAAShC,EAAQgC,UAEjBlC,OAKV6H,EAAYlH,aAAW,SAAC0B,GAAD,MAAY,CACrC3B,KAAM,CACF4B,MAAO,GACPC,OAAQ,GACRE,QAAS,EACT7B,QAAS,QAEboB,WAAY,CACRS,QAAS,EACTvB,MAAOmB,EAAMe,QAAQC,KAAK,KAC1B,YAAa,CACTM,UAAW,mBACXzC,MAAOmB,EAAMe,QAAQgB,OAAOE,MAC5B,aAAc,CACVV,QAAS,EACTI,gBAAiB3B,EAAMe,QAAQU,QAAQC,KACvC+D,YAAazF,EAAMe,QAAQU,QAAQC,QAI/CvC,MAAO,CACHc,MAAO,GACPC,OAAQ,GACRmC,UAAW,QAEftC,MAAO,CACHqF,OAAO,aAAD,OAAepF,EAAMe,QAAQC,KAAK,MACxCuB,aAAc,EACdhB,QAAS,EACTI,gBAAiB3B,EAAMe,QAAQgB,OAAOE,OAE1CpC,QAAS,MA/BKvB,CAgCdK,KAEW,SAAS+G,IACpB,MAA0BhI,IAAM+E,SAAS,CACrCC,UAAU,EACVC,UAAU,EACVgD,UAAU,IAHd,mBAAO/C,EAAP,KAAcC,EAAd,KAMMC,EAAe,SAACpE,GAAD,OAAU,SAACqE,GAC5BF,EAAS,2BAAKD,GAAN,kBAAclE,EAAOqE,EAAMC,OAAOnD,aAG9C,OACI,kBAACpC,EAAA,EAAD,KACI,kBAAC6F,EAAA,EAAD,CACIC,QACI,kBAACyB,EAAD,CACInF,QAAS+C,EAAMF,SACfO,SAAUH,EAAa,YACvBI,MAAM,aAGdM,MAAM,iBAEV,kBAACF,EAAA,EAAD,CACIC,QACI,kBAAC0B,EAAD,CACIpF,QAAS+C,EAAMD,SACfM,SAAUH,EAAa,YACvBI,MAAM,aAGdM,MAAM,cAEV,kBAACoC,EAAA,EAAD,CAAY9B,UAAU,OAClB,kBAAC+B,EAAA,EAAD,CACI/B,UAAU,QACVgC,WAAS,EACTC,WAAW,SACXZ,QAAS,GAET,kBAACU,EAAA,EAAD,CAAMG,MAAI,GAAV,OACA,kBAACH,EAAA,EAAD,CAAMG,MAAI,GACN,kBAACR,EAAD,CACI3F,QAAS+C,EAAM+C,SACf1C,SAAUH,EAAa,YACvBI,MAAM,cAGd,kBAAC2C,EAAA,EAAD,CAAMG,MAAI,GAAV,SCzGLC,MA9Cf,WACI,MAA0BvI,IAAM+E,SAAS,UAAzC,mBAAOS,EAAP,KAAcgD,EAAd,KAMA,OACI,kBAACrC,EAAA,EAAD,CAAaC,UAAU,YACnB,kBAACC,EAAA,EAAD,CAAWD,UAAU,UAArB,kBACA,kBAACrG,EAAA,EAAD,CACI0I,aAAW,WACXzH,KAAK,WACLwE,MAAOA,EACPD,SAXZ,SAAsBF,GAClBmD,EAASnD,EAAMC,OAAOE,QAWdlF,KAAG,GAEH,kBAACsF,EAAA,EAAD,CACIJ,MAAM,MACNK,QAAS,kBAAC5E,EAAA,EAAD,CAAQE,MAAM,YACvB2E,MAAM,MACN4C,eAAe,QAEnB,kBAAC9C,EAAA,EAAD,CACIJ,MAAM,QACNK,QAAS,kBAAC5E,EAAA,EAAD,CAAQE,MAAM,YACvB2E,MAAM,QACN4C,eAAe,UAEnB,kBAAC9C,EAAA,EAAD,CACIJ,MAAM,SACNK,QAAS,kBAAC5E,EAAA,EAAD,CAAQE,MAAM,YACvB2E,MAAM,SACN4C,eAAe,WAEnB,kBAAC9C,EAAA,EAAD,CACIJ,MAAM,MACNK,QAAS,kBAAC5E,EAAA,EAAD,CAAQE,MAAM,YACvB2E,MAAM,MACN4C,eAAe,W,QCJpBC,UAlCG,WACd,OACI,yBAAKvI,UAAU,WACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CACIwI,cAAe,CACX,CAAE5H,KAAM,WAAY6H,KAAM,aAC1B,CAAE7H,KAAM,cAIpB,kBAAC,IAAD,CAAY8H,MAAM,iBACd,kBAAChE,EAAD,OAEJ,yBAAK1E,UAAU,SACf,kBAAC,IAAD,CAAY0I,MAAM,qBACd,kBAACnD,EAAD,OAEJ,yBAAKvF,UAAU,SACf,kBAAC,IAAD,CAAY0I,MAAM,0BACd,kBAAC/C,EAAD,OAEJ,yBAAK3F,UAAU,SACf,kBAAC,IAAD,CAAY0I,MAAM,qBACd,kBAACd,EAAD,OAEJ,yBAAK5H,UAAU,SACf,kBAAC,IAAD,CAAY0I,MAAM,yCACd,kBAAC,EAAD","file":"static/js/28.e0b0140d.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React from 'react'\r\nimport Switch from '@material-ui/core/Switch'\r\n\r\nexport default function SimpleSwitch() {\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    })\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setState({ ...state, [name]: event.target.checked })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Switch\r\n                checked={state.checkedA}\r\n                onChange={handleChange('checkedA')}\r\n                value=\"checkedA\"\r\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n            />\r\n            <Switch\r\n                checked={state.checkedB}\r\n                onChange={handleChange('checkedB')}\r\n                value=\"checkedB\"\r\n                color=\"primary\"\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n            />\r\n            <Switch\r\n                value=\"checkedC\"\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n            />\r\n            <Switch\r\n                disabled\r\n                value=\"checkedD\"\r\n                inputProps={{ 'aria-label': 'disabled checkbox' }}\r\n            />\r\n            <Switch\r\n                disabled\r\n                checked\r\n                value=\"checkedE\"\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n            />\r\n            <Switch\r\n                defaultChecked\r\n                value=\"checkedF\"\r\n                color=\"default\"\r\n                inputProps={{ 'aria-label': 'checkbox with default color' }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport FormGroup from '@material-ui/core/FormGroup'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Switch from '@material-ui/core/Switch'\r\n\r\nexport default function LabelledSwitch() {\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    })\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setState({ ...state, [name]: event.target.checked })\r\n    }\r\n\r\n    return (\r\n        <FormGroup row>\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch\r\n                        checked={state.checkedA}\r\n                        onChange={handleChange('checkedA')}\r\n                        value=\"checkedA\"\r\n                    />\r\n                }\r\n                label=\"Secondary\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch\r\n                        checked={state.checkedB}\r\n                        onChange={handleChange('checkedB')}\r\n                        value=\"checkedB\"\r\n                        color=\"primary\"\r\n                    />\r\n                }\r\n                label=\"Primary\"\r\n            />\r\n            <FormControlLabel\r\n                control={<Switch value=\"checkedC\" />}\r\n                label=\"Uncontrolled\"\r\n            />\r\n            <FormControlLabel\r\n                disabled\r\n                control={<Switch value=\"checkedD\" />}\r\n                label=\"Disabled\"\r\n            />\r\n            <FormControlLabel\r\n                disabled\r\n                control={<Switch checked value=\"checkedE\" />}\r\n                label=\"Disabled\"\r\n            />\r\n        </FormGroup>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport FormLabel from '@material-ui/core/FormLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormGroup from '@material-ui/core/FormGroup'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Switch from '@material-ui/core/Switch'\r\n\r\nexport default function FormGroupSwitch() {\r\n    const [state, setState] = React.useState({\r\n        gilad: true,\r\n        jason: false,\r\n        antoine: true,\r\n    })\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setState({ ...state, [name]: event.target.checked })\r\n    }\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">Assign responsibility</FormLabel>\r\n            <FormGroup>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={state.gilad}\r\n                            onChange={handleChange('gilad')}\r\n                            value=\"gilad\"\r\n                        />\r\n                    }\r\n                    label=\"Gilad Gray\"\r\n                />\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={state.jason}\r\n                            onChange={handleChange('jason')}\r\n                            value=\"jason\"\r\n                        />\r\n                    }\r\n                    label=\"Jason Killian\"\r\n                />\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={state.antoine}\r\n                            onChange={handleChange('antoine')}\r\n                            value=\"antoine\"\r\n                        />\r\n                    }\r\n                    label=\"Antoine Llorca\"\r\n                />\r\n            </FormGroup>\r\n            <FormHelperText>Be careful</FormHelperText>\r\n        </FormControl>\r\n    )\r\n}\r\n","var purple = {\n  50: '#f3e5f5',\n  100: '#e1bee7',\n  200: '#ce93d8',\n  300: '#ba68c8',\n  400: '#ab47bc',\n  500: '#9c27b0',\n  600: '#8e24aa',\n  700: '#7b1fa2',\n  800: '#6a1b9a',\n  900: '#4a148c',\n  A100: '#ea80fc',\n  A200: '#e040fb',\n  A400: '#d500f9',\n  A700: '#aa00ff'\n};\nexport default purple;","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { purple } from '@material-ui/core/colors'\r\nimport FormGroup from '@material-ui/core/FormGroup'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst PurpleSwitch = withStyles({\r\n    switchBase: {\r\n        color: purple[300],\r\n        '&$checked': {\r\n            color: purple[500],\r\n        },\r\n        '&$checked + $track': {\r\n            backgroundColor: purple[500],\r\n        },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n})(Switch)\r\n\r\nconst IOSSwitch = withStyles((theme) => ({\r\n    root: {\r\n        width: 42,\r\n        height: 26,\r\n        padding: 0,\r\n        margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n        padding: 1,\r\n        '&$checked': {\r\n            transform: 'translateX(16px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                backgroundColor: '#52d869',\r\n                opacity: 1,\r\n                border: 'none',\r\n            },\r\n        },\r\n        '&$focusVisible $thumb': {\r\n            color: '#52d869',\r\n            border: '6px solid #fff',\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    track: {\r\n        borderRadius: 26 / 2,\r\n        border: `1px solid ${theme.palette.grey[400]}`,\r\n        backgroundColor: theme.palette.grey[50],\r\n        opacity: 1,\r\n        transition: theme.transitions.create(['background-color', 'border']),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n    return (\r\n        <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n                root: classes.root,\r\n                switchBase: classes.switchBase,\r\n                thumb: classes.thumb,\r\n                track: classes.track,\r\n                checked: classes.checked,\r\n            }}\r\n            {...props}\r\n        />\r\n    )\r\n})\r\n\r\nconst AntSwitch = withStyles((theme) => ({\r\n    root: {\r\n        width: 28,\r\n        height: 16,\r\n        padding: 0,\r\n        display: 'flex',\r\n    },\r\n    switchBase: {\r\n        padding: 2,\r\n        color: theme.palette.grey[500],\r\n        '&$checked': {\r\n            transform: 'translateX(12px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                opacity: 1,\r\n                backgroundColor: theme.palette.primary.main,\r\n                borderColor: theme.palette.primary.main,\r\n            },\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 12,\r\n        height: 12,\r\n        boxShadow: 'none',\r\n    },\r\n    track: {\r\n        border: `1px solid ${theme.palette.grey[500]}`,\r\n        borderRadius: 16 / 2,\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.common.white,\r\n    },\r\n    checked: {},\r\n}))(Switch)\r\n\r\nexport default function CustomizedSwitch() {\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedC: true,\r\n    })\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setState({ ...state, [name]: event.target.checked })\r\n    }\r\n\r\n    return (\r\n        <FormGroup>\r\n            <FormControlLabel\r\n                control={\r\n                    <PurpleSwitch\r\n                        checked={state.checkedA}\r\n                        onChange={handleChange('checkedA')}\r\n                        value=\"checkedA\"\r\n                    />\r\n                }\r\n                label=\"Custom color\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <IOSSwitch\r\n                        checked={state.checkedB}\r\n                        onChange={handleChange('checkedB')}\r\n                        value=\"checkedB\"\r\n                    />\r\n                }\r\n                label=\"iOS style\"\r\n            />\r\n            <Typography component=\"div\">\r\n                <Grid\r\n                    component=\"label\"\r\n                    container\r\n                    alignItems=\"center\"\r\n                    spacing={1}\r\n                >\r\n                    <Grid item>Off</Grid>\r\n                    <Grid item>\r\n                        <AntSwitch\r\n                            checked={state.checkedC}\r\n                            onChange={handleChange('checkedC')}\r\n                            value=\"checkedC\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>On</Grid>\r\n                </Grid>\r\n            </Typography>\r\n        </FormGroup>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport FormGroup from '@material-ui/core/FormGroup'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormLabel from '@material-ui/core/FormLabel'\r\n\r\nfunction PlacingSwitchLabel() {\r\n    const [value, setValue] = React.useState('female')\r\n\r\n    function handleChange(event) {\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">labelPlacement</FormLabel>\r\n            <FormGroup\r\n                aria-label=\"position\"\r\n                name=\"position\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                row\r\n            >\r\n                <FormControlLabel\r\n                    value=\"top\"\r\n                    control={<Switch color=\"primary\" />}\r\n                    label=\"Top\"\r\n                    labelPlacement=\"top\"\r\n                />\r\n                <FormControlLabel\r\n                    value=\"start\"\r\n                    control={<Switch color=\"primary\" />}\r\n                    label=\"Start\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                    value=\"bottom\"\r\n                    control={<Switch color=\"primary\" />}\r\n                    label=\"Bottom\"\r\n                    labelPlacement=\"bottom\"\r\n                />\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" />}\r\n                    label=\"End\"\r\n                    labelPlacement=\"end\"\r\n                />\r\n            </FormGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default PlacingSwitchLabel\r\n","import React from 'react'\r\nimport SimpleSwitch from './SijmpleSwitch'\r\nimport LabelledSwitch from './LabelledSwitch'\r\nimport FormGroupSwitch from './FormGroupSwitch'\r\nimport CustomizedSwitch from './CustomizedSwitch'\r\nimport PlacingSwitchLabel from './PlacingSwitchLabel'\r\nimport { Breadcrumb, SimpleCard } from 'app/components'\r\n\r\nconst AppSwitch = () => {\r\n    return (\r\n        <div className=\"m-sm-30\">\r\n            <div className=\"mb-sm-30\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Material', path: '/material' },\r\n                        { name: 'Switch' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <SimpleCard title=\"Simple Switch\">\r\n                <SimpleSwitch />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"Switch with Label\">\r\n                <LabelledSwitch />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"Switch with Form Group\">\r\n                <FormGroupSwitch />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"Customized Switch\">\r\n                <CustomizedSwitch />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"Switch with Different Label Placement\">\r\n                <PlacingSwitchLabel />\r\n            </SimpleCard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppSwitch\r\n"],"sourceRoot":""}